openapi: 3.0.1
info:
  title: DigitalArchitectureFramework
  version: '0.4 Alpha '
  description: >-
    The Digital Architecture Framework (DAF) is a metamodel and set of modeling tools for Digital Engineering. Its goal is to bridge the classic gaps between strategy, design, and execution by enabling collaboration between enterprise architects, solution architects, business analysts, and engineers. DAF provides standardised concepts and relationships (based on UML, ArchiMate, TOGAF, RUP, and SPEM) to create high-quality models (digital twins) that can be transformed into executable artifacts .
    This DAF OpenAPI makes those models accessible as services. It exposes the core DAF concepts�such as Business Processes, Value Streams, Goals, Initiatives, Capabilities, Applications, and Technology elements�as REST resources.
  contact:
    name: Giu Platania
    url: https://github.com/FreeTAKTeam/DigitalArchitectureFramework
    email: giu.platania@doorbusinessconsulting.com
  license:
    name: EPL
paths:
  /dBusinessProcess:
    post:
      x-scope: public
      tags:
       - dBusinessProcess
      description: >-
      summary: Creates a new dBusinessProcess record.
      operationId: CreatedBusinessProcess
      requestBody:
        $ref: '#/components/requestBodies/dBusinessProcess'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessProcess_post'
    delete:
      x-scope: public
      tags:
       - dBusinessProcess
      description: >-
      summary: Deletes an existing dBusinessProcess record based on the provided ID.
      operationId: DeletedBusinessProcess
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessProcess_delete'
    get:
      x-scope: public
      tags:
       - dBusinessProcess
      description: >-
      summary: Retrieves a list of all dBusinessProcess
      operationId: ListdBusinessProcess
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessProcess_get'
    patch:
      x-scope: public
      tags:
       - dBusinessProcess
      description: >-
      summary: Updates an existing dBusinessProcess record.
      operationId: PatchdBusinessProcess
      requestBody:
        $ref: '#/components/requestBodies/dBusinessProcess'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessProcess_patch'
  /dValueStream/{id}:
    get:
      x-scope: public
      tags:
       - dValueStream
      description: >-
      summary: retrieve an existing dValueStream record based on the provided ID.
      operationId: RetreivedValueStream
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dValueStream_get'
  /dAPI:
    post:
      x-scope: public
      tags:
       - dAPI
      description: >-
      summary: Creates a new dAPI record.
      operationId: CreatedAPI
      requestBody:
        $ref: '#/components/requestBodies/dAPI'
      responses:
        '200':
          $ref: '#/components/responses/200dAPI_post'
    delete:
      x-scope: public
      tags:
       - dAPI
      description: >-
      summary: Deletes an existing dAPI record based on the provided ID.
      operationId: DeletedAPI
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dAPI_delete'
    get:
      x-scope: public
      tags:
       - dAPI
      description: >-
      summary: Retrieves a list of all dAPI
      operationId: ListdAPI
      responses:
        '200':
          $ref: '#/components/responses/200dAPI_get'
    patch:
      x-scope: public
      tags:
       - dAPI
      description: >-
      summary: Updates an existing dAPI record.
      operationId: PatchdAPI
      requestBody:
        $ref: '#/components/requestBodies/dAPI'
      responses:
        '200':
          $ref: '#/components/responses/200dAPI_patch'
  /dOpinion:
    post:
      x-scope: public
      tags:
       - dOpinion
      description: >-
      summary: Creates a new dOpinion record.
      operationId: CreatedOpinion
      requestBody:
        $ref: '#/components/requestBodies/dOpinion'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinion_post'
    delete:
      x-scope: public
      tags:
       - dOpinion
      description: >-
      summary: Deletes an existing dOpinion record based on the provided ID.
      operationId: DeletedOpinion
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinion_delete'
    get:
      x-scope: public
      tags:
       - dOpinion
      description: >-
      summary: Retrieves a list of all dOpinion
      operationId: ListdOpinion
      responses:
        '200':
          $ref: '#/components/responses/200dOpinion_get'
    patch:
      x-scope: public
      tags:
       - dOpinion
      description: >-
      summary: Updates an existing dOpinion record.
      operationId: PatchdOpinion
      requestBody:
        $ref: '#/components/requestBodies/dOpinion'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinion_patch'
  /dCapability:
    post:
      x-scope: public
      tags:
       - dCapability
      description: >-
      summary: Creates a new dCapability record.
      operationId: CreatedCapability
      requestBody:
        $ref: '#/components/requestBodies/dCapability'
      responses:
        '200':
          $ref: '#/components/responses/200dCapability_post'
    delete:
      x-scope: public
      tags:
       - dCapability
      description: >-
      summary: Deletes an existing dCapability record based on the provided ID.
      operationId: DeletedCapability
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dCapability_delete'
    get:
      x-scope: public
      tags:
       - dCapability
      description: >-
      summary: Retrieves a list of all dCapability
      operationId: ListdCapability
      responses:
        '200':
          $ref: '#/components/responses/200dCapability_get'
    patch:
      x-scope: public
      tags:
       - dCapability
      description: >-
      summary: Updates an existing dCapability record.
      operationId: PatchdCapability
      requestBody:
        $ref: '#/components/requestBodies/dCapability'
      responses:
        '200':
          $ref: '#/components/responses/200dCapability_patch'
  /dPrinciple/{id}:
    get:
      x-scope: public
      tags:
       - dPrinciple
      description: >-
      summary: retrieve an existing dPrinciple record based on the provided ID.
      operationId: RetreivedPrinciple
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dPrinciple_get'
  /dBusinessArea/{id}:
    get:
      x-scope: public
      tags:
       - dBusinessArea
      description: >-
      summary: retrieve an existing dBusinessArea record based on the provided ID.
      operationId: RetreivedBusinessArea
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessArea_get'
  /dTest/{id}:
    get:
      x-scope: public
      tags:
       - dTest
      description: >-
      summary: retrieve an existing dTest record based on the provided ID.
      operationId: RetreivedTest
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dTest_get'
  /dJSON_Schema:
    post:
      x-scope: public
      tags:
       - dJSON_Schema
      description: >-
      summary: Creates a new dJSON_Schema record.
      operationId: CreatedJSON_Schema
      requestBody:
        $ref: '#/components/requestBodies/dJSON_Schema'
      responses:
        '200':
          $ref: '#/components/responses/200dJSON_Schema_post'
    delete:
      x-scope: public
      tags:
       - dJSON_Schema
      description: >-
      summary: Deletes an existing dJSON_Schema record based on the provided ID.
      operationId: DeletedJSON_Schema
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dJSON_Schema_delete'
    get:
      x-scope: public
      tags:
       - dJSON_Schema
      description: >-
      summary: Retrieves a list of all dJSON_Schema
      operationId: ListdJSON_Schema
      responses:
        '200':
          $ref: '#/components/responses/200dJSON_Schema_get'
    patch:
      x-scope: public
      tags:
       - dJSON_Schema
      description: >-
      summary: Updates an existing dJSON_Schema record.
      operationId: PatchdJSON_Schema
      requestBody:
        $ref: '#/components/requestBodies/dJSON_Schema'
      responses:
        '200':
          $ref: '#/components/responses/200dJSON_Schema_patch'
  /dValueStream:
    post:
      x-scope: public
      tags:
       - dValueStream
      description: >-
      summary: Creates a new dValueStream record.
      operationId: CreatedValueStream
      requestBody:
        $ref: '#/components/requestBodies/dValueStream'
      responses:
        '200':
          $ref: '#/components/responses/200dValueStream_post'
    delete:
      x-scope: public
      tags:
       - dValueStream
      description: >-
      summary: Deletes an existing dValueStream record based on the provided ID.
      operationId: DeletedValueStream
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dValueStream_delete'
    get:
      x-scope: public
      tags:
       - dValueStream
      description: >-
      summary: Retrieves a list of all dValueStream
      operationId: ListdValueStream
      responses:
        '200':
          $ref: '#/components/responses/200dValueStream_get'
    patch:
      x-scope: public
      tags:
       - dValueStream
      description: >-
      summary: Updates an existing dValueStream record.
      operationId: PatchdValueStream
      requestBody:
        $ref: '#/components/requestBodies/dValueStream'
      responses:
        '200':
          $ref: '#/components/responses/200dValueStream_patch'
  /dTable:
    post:
      x-scope: public
      tags:
       - dTable
      description: >-
      summary: Creates a new dTable record.
      operationId: CreatedTable
      requestBody:
        $ref: '#/components/requestBodies/dTable'
      responses:
        '200':
          $ref: '#/components/responses/200dTable_post'
    delete:
      x-scope: public
      tags:
       - dTable
      description: >-
      summary: Deletes an existing dTable record based on the provided ID.
      operationId: DeletedTable
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dTable_delete'
    get:
      x-scope: public
      tags:
       - dTable
      description: >-
      summary: Retrieves a list of all dTable
      operationId: ListdTable
      responses:
        '200':
          $ref: '#/components/responses/200dTable_get'
    patch:
      x-scope: public
      tags:
       - dTable
      description: >-
      summary: Updates an existing dTable record.
      operationId: PatchdTable
      requestBody:
        $ref: '#/components/requestBodies/dTable'
      responses:
        '200':
          $ref: '#/components/responses/200dTable_patch'
  /dApplicationFunction/{id}:
    get:
      x-scope: public
      tags:
       - dApplicationFunction
      description: >-
      summary: retrieve an existing dApplicationFunction record based on the provided ID.
      operationId: RetreivedApplicationFunction
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationFunction_get'
  /dOpinionInner/{id}:
    get:
      x-scope: public
      tags:
       - dOpinionInner
      description: >-
      summary: retrieve an existing dOpinionInner record based on the provided ID.
      operationId: RetreivedOpinionInner
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinionInner_get'
  /dGoal:
    post:
      x-scope: public
      tags:
       - dGoal
      description: >-
      summary: Creates a new dGoal record.
      operationId: CreatedGoal
      requestBody:
        $ref: '#/components/requestBodies/dGoal'
      responses:
        '200':
          $ref: '#/components/responses/200dGoal_post'
    delete:
      x-scope: public
      tags:
       - dGoal
      description: >-
      summary: Deletes an existing dGoal record based on the provided ID.
      operationId: DeletedGoal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dGoal_delete'
    get:
      x-scope: public
      tags:
       - dGoal
      description: >-
      summary: Retrieves a list of all dGoal
      operationId: ListdGoal
      responses:
        '200':
          $ref: '#/components/responses/200dGoal_get'
    patch:
      x-scope: public
      tags:
       - dGoal
      description: >-
      summary: Updates an existing dGoal record.
      operationId: PatchdGoal
      requestBody:
        $ref: '#/components/requestBodies/dGoal'
      responses:
        '200':
          $ref: '#/components/responses/200dGoal_patch'
  /dObjective/{id}:
    get:
      x-scope: public
      tags:
       - dObjective
      description: >-
      summary: retrieve an existing dObjective record based on the provided ID.
      operationId: RetreivedObjective
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dObjective_get'
  /dObject:
    post:
      x-scope: public
      tags:
       - dObject
      description: >-
      summary: Creates a new dObject record.
      operationId: CreatedObject
      requestBody:
        $ref: '#/components/requestBodies/dObject'
      responses:
        '200':
          $ref: '#/components/responses/200dObject_post'
    delete:
      x-scope: public
      tags:
       - dObject
      description: >-
      summary: Deletes an existing dObject record based on the provided ID.
      operationId: DeletedObject
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dObject_delete'
    get:
      x-scope: public
      tags:
       - dObject
      description: >-
      summary: Retrieves a list of all dObject
      operationId: ListdObject
      responses:
        '200':
          $ref: '#/components/responses/200dObject_get'
    patch:
      x-scope: public
      tags:
       - dObject
      description: >-
      summary: Updates an existing dObject record.
      operationId: PatchdObject
      requestBody:
        $ref: '#/components/requestBodies/dObject'
      responses:
        '200':
          $ref: '#/components/responses/200dObject_patch'
  /dZone/{id}:
    get:
      x-scope: public
      tags:
       - dZone
      description: >-
      summary: retrieve an existing dZone record based on the provided ID.
      operationId: RetreivedZone
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dZone_get'
  /dModelClass/{id}:
    get:
      x-scope: public
      tags:
       - dModelClass
      description: >-
      summary: retrieve an existing dModelClass record based on the provided ID.
      operationId: RetreivedModelClass
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dModelClass_get'
  /dPhysicalService:
    post:
      x-scope: public
      tags:
       - dPhysicalService
      description: >-
      summary: Creates a new dPhysicalService record.
      operationId: CreatedPhysicalService
      requestBody:
        $ref: '#/components/requestBodies/dPhysicalService'
      responses:
        '200':
          $ref: '#/components/responses/200dPhysicalService_post'
    delete:
      x-scope: public
      tags:
       - dPhysicalService
      description: >-
      summary: Deletes an existing dPhysicalService record based on the provided ID.
      operationId: DeletedPhysicalService
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dPhysicalService_delete'
    get:
      x-scope: public
      tags:
       - dPhysicalService
      description: >-
      summary: Retrieves a list of all dPhysicalService
      operationId: ListdPhysicalService
      responses:
        '200':
          $ref: '#/components/responses/200dPhysicalService_get'
    patch:
      x-scope: public
      tags:
       - dPhysicalService
      description: >-
      summary: Updates an existing dPhysicalService record.
      operationId: PatchdPhysicalService
      requestBody:
        $ref: '#/components/requestBodies/dPhysicalService'
      responses:
        '200':
          $ref: '#/components/responses/200dPhysicalService_patch'
  /dGrowthPackage:
    post:
      x-scope: public
      tags:
       - dGrowthPackage
      description: >-
      summary: Creates a new dGrowthPackage record.
      operationId: CreatedGrowthPackage
      requestBody:
        $ref: '#/components/requestBodies/dGrowthPackage'
      responses:
        '200':
          $ref: '#/components/responses/200dGrowthPackage_post'
    delete:
      x-scope: public
      tags:
       - dGrowthPackage
      description: >-
      summary: Deletes an existing dGrowthPackage record based on the provided ID.
      operationId: DeletedGrowthPackage
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dGrowthPackage_delete'
    get:
      x-scope: public
      tags:
       - dGrowthPackage
      description: >-
      summary: Retrieves a list of all dGrowthPackage
      operationId: ListdGrowthPackage
      responses:
        '200':
          $ref: '#/components/responses/200dGrowthPackage_get'
    patch:
      x-scope: public
      tags:
       - dGrowthPackage
      description: >-
      summary: Updates an existing dGrowthPackage record.
      operationId: PatchdGrowthPackage
      requestBody:
        $ref: '#/components/requestBodies/dGrowthPackage'
      responses:
        '200':
          $ref: '#/components/responses/200dGrowthPackage_patch'
  /dProgram/{id}:
    get:
      x-scope: public
      tags:
       - dProgram
      description: >-
      summary: retrieve an existing dProgram record based on the provided ID.
      operationId: RetreivedProgram
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dProgram_get'
  /dSecurityGroup:
    post:
      x-scope: public
      tags:
       - dSecurityGroup
      description: >-
      summary: Creates a new dSecurityGroup record.
      operationId: CreatedSecurityGroup
      requestBody:
        $ref: '#/components/requestBodies/dSecurityGroup'
      responses:
        '200':
          $ref: '#/components/responses/200dSecurityGroup_post'
    delete:
      x-scope: public
      tags:
       - dSecurityGroup
      description: >-
      summary: Deletes an existing dSecurityGroup record based on the provided ID.
      operationId: DeletedSecurityGroup
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSecurityGroup_delete'
    get:
      x-scope: public
      tags:
       - dSecurityGroup
      description: >-
      summary: Retrieves a list of all dSecurityGroup
      operationId: ListdSecurityGroup
      responses:
        '200':
          $ref: '#/components/responses/200dSecurityGroup_get'
    patch:
      x-scope: public
      tags:
       - dSecurityGroup
      description: >-
      summary: Updates an existing dSecurityGroup record.
      operationId: PatchdSecurityGroup
      requestBody:
        $ref: '#/components/requestBodies/dSecurityGroup'
      responses:
        '200':
          $ref: '#/components/responses/200dSecurityGroup_patch'
  /dInitiative/{id}:
    get:
      x-scope: public
      tags:
       - dInitiative
      description: >-
      summary: retrieve an existing dInitiative record based on the provided ID.
      operationId: RetreivedInitiative
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dInitiative_get'
  /dFeature:
    post:
      x-scope: public
      tags:
       - dFeature
      description: >-
      summary: Creates a new dFeature record.
      operationId: CreatedFeature
      requestBody:
        $ref: '#/components/requestBodies/dFeature'
      responses:
        '200':
          $ref: '#/components/responses/200dFeature_post'
    delete:
      x-scope: public
      tags:
       - dFeature
      description: >-
      summary: Deletes an existing dFeature record based on the provided ID.
      operationId: DeletedFeature
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dFeature_delete'
    get:
      x-scope: public
      tags:
       - dFeature
      description: >-
      summary: Retrieves a list of all dFeature
      operationId: ListdFeature
      responses:
        '200':
          $ref: '#/components/responses/200dFeature_get'
    patch:
      x-scope: public
      tags:
       - dFeature
      description: >-
      summary: Updates an existing dFeature record.
      operationId: PatchdFeature
      requestBody:
        $ref: '#/components/requestBodies/dFeature'
      responses:
        '200':
          $ref: '#/components/responses/200dFeature_patch'
  /dView/{id}:
    get:
      x-scope: public
      tags:
       - dView
      description: >-
      summary: retrieve an existing dView record based on the provided ID.
      operationId: RetreivedView
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dView_get'
  /dSystem/{id}:
    get:
      x-scope: public
      tags:
       - dSystem
      description: >-
      summary: retrieve an existing dSystem record based on the provided ID.
      operationId: RetreivedSystem
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSystem_get'
  /dActor:
    post:
      x-scope: public
      tags:
       - dActor
      description: >-
      summary: Creates a new dActor record.
      operationId: CreatedActor
      requestBody:
        $ref: '#/components/requestBodies/dActor'
      responses:
        '200':
          $ref: '#/components/responses/200dActor_post'
    delete:
      x-scope: public
      tags:
       - dActor
      description: >-
      summary: Deletes an existing dActor record based on the provided ID.
      operationId: DeletedActor
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dActor_delete'
    get:
      x-scope: public
      tags:
       - dActor
      description: >-
      summary: Retrieves a list of all dActor
      operationId: ListdActor
      responses:
        '200':
          $ref: '#/components/responses/200dActor_get'
    patch:
      x-scope: public
      tags:
       - dActor
      description: >-
      summary: Updates an existing dActor record.
      operationId: PatchdActor
      requestBody:
        $ref: '#/components/requestBodies/dActor'
      responses:
        '200':
          $ref: '#/components/responses/200dActor_patch'
  /dContainer:
    post:
      x-scope: public
      tags:
       - dContainer
      description: >-
      summary: Creates a new dContainer record.
      operationId: CreatedContainer
      requestBody:
        $ref: '#/components/requestBodies/dContainer'
      responses:
        '200':
          $ref: '#/components/responses/200dContainer_post'
    delete:
      x-scope: public
      tags:
       - dContainer
      description: >-
      summary: Deletes an existing dContainer record based on the provided ID.
      operationId: DeletedContainer
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dContainer_delete'
    get:
      x-scope: public
      tags:
       - dContainer
      description: >-
      summary: Retrieves a list of all dContainer
      operationId: ListdContainer
      responses:
        '200':
          $ref: '#/components/responses/200dContainer_get'
    patch:
      x-scope: public
      tags:
       - dContainer
      description: >-
      summary: Updates an existing dContainer record.
      operationId: PatchdContainer
      requestBody:
        $ref: '#/components/requestBodies/dContainer'
      responses:
        '200':
          $ref: '#/components/responses/200dContainer_patch'
  /dApplicationComponent/{id}:
    get:
      x-scope: public
      tags:
       - dApplicationComponent
      description: >-
      summary: retrieve an existing dApplicationComponent record based on the provided ID.
      operationId: RetreivedApplicationComponent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationComponent_get'
  /dBusinessProcess/{id}:
    get:
      x-scope: public
      tags:
       - dBusinessProcess
      description: >-
      summary: retrieve an existing dBusinessProcess record based on the provided ID.
      operationId: RetreivedBusinessProcess
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessProcess_get'
  /dGrowthPackage/{id}:
    get:
      x-scope: public
      tags:
       - dGrowthPackage
      description: >-
      summary: retrieve an existing dGrowthPackage record based on the provided ID.
      operationId: RetreivedGrowthPackage
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dGrowthPackage_get'
  /dSecurityGroup/{id}:
    get:
      x-scope: public
      tags:
       - dSecurityGroup
      description: >-
      summary: retrieve an existing dSecurityGroup record based on the provided ID.
      operationId: RetreivedSecurityGroup
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSecurityGroup_get'
  /dRole/{id}:
    get:
      x-scope: public
      tags:
       - dRole
      description: >-
      summary: retrieve an existing dRole record based on the provided ID.
      operationId: RetreivedRole
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRole_get'
  /dController:
    post:
      x-scope: public
      tags:
       - dController
      description: >-
      summary: Creates a new dController record.
      operationId: CreatedController
      requestBody:
        $ref: '#/components/requestBodies/dController'
      responses:
        '200':
          $ref: '#/components/responses/200dController_post'
    delete:
      x-scope: public
      tags:
       - dController
      description: >-
      summary: Deletes an existing dController record based on the provided ID.
      operationId: DeletedController
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dController_delete'
    get:
      x-scope: public
      tags:
       - dController
      description: >-
      summary: Retrieves a list of all dController
      operationId: ListdController
      responses:
        '200':
          $ref: '#/components/responses/200dController_get'
    patch:
      x-scope: public
      tags:
       - dController
      description: >-
      summary: Updates an existing dController record.
      operationId: PatchdController
      requestBody:
        $ref: '#/components/requestBodies/dController'
      responses:
        '200':
          $ref: '#/components/responses/200dController_patch'
  /dDeploymentModel/{id}:
    get:
      x-scope: public
      tags:
       - dDeploymentModel
      description: >-
      summary: retrieve an existing dDeploymentModel record based on the provided ID.
      operationId: RetreivedDeploymentModel
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentModel_get'
  /dDeploymentNode/{id}:
    get:
      x-scope: public
      tags:
       - dDeploymentNode
      description: >-
      summary: retrieve an existing dDeploymentNode record based on the provided ID.
      operationId: RetreivedDeploymentNode
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentNode_get'
  /dPhysicalService/{id}:
    get:
      x-scope: public
      tags:
       - dPhysicalService
      description: >-
      summary: retrieve an existing dPhysicalService record based on the provided ID.
      operationId: RetreivedPhysicalService
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dPhysicalService_get'
  /dProduct:
    post:
      x-scope: public
      tags:
       - dProduct
      description: >-
      summary: Creates a new dProduct record.
      operationId: CreatedProduct
      requestBody:
        $ref: '#/components/requestBodies/dProduct'
      responses:
        '200':
          $ref: '#/components/responses/200dProduct_post'
    delete:
      x-scope: public
      tags:
       - dProduct
      description: >-
      summary: Deletes an existing dProduct record based on the provided ID.
      operationId: DeletedProduct
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dProduct_delete'
    get:
      x-scope: public
      tags:
       - dProduct
      description: >-
      summary: Retrieves a list of all dProduct
      operationId: ListdProduct
      responses:
        '200':
          $ref: '#/components/responses/200dProduct_get'
    patch:
      x-scope: public
      tags:
       - dProduct
      description: >-
      summary: Updates an existing dProduct record.
      operationId: PatchdProduct
      requestBody:
        $ref: '#/components/requestBodies/dProduct'
      responses:
        '200':
          $ref: '#/components/responses/200dProduct_patch'
  /dApplicationComponent:
    post:
      x-scope: public
      tags:
       - dApplicationComponent
      description: >-
      summary: Creates a new dApplicationComponent record.
      operationId: CreatedApplicationComponent
      requestBody:
        $ref: '#/components/requestBodies/dApplicationComponent'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationComponent_post'
    delete:
      x-scope: public
      tags:
       - dApplicationComponent
      description: >-
      summary: Deletes an existing dApplicationComponent record based on the provided ID.
      operationId: DeletedApplicationComponent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationComponent_delete'
    get:
      x-scope: public
      tags:
       - dApplicationComponent
      description: >-
      summary: Retrieves a list of all dApplicationComponent
      operationId: ListdApplicationComponent
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationComponent_get'
    patch:
      x-scope: public
      tags:
       - dApplicationComponent
      description: >-
      summary: Updates an existing dApplicationComponent record.
      operationId: PatchdApplicationComponent
      requestBody:
        $ref: '#/components/requestBodies/dApplicationComponent'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationComponent_patch'
  /dRisk:
    post:
      x-scope: public
      tags:
       - dRisk
      description: >-
      summary: Creates a new dRisk record.
      operationId: CreatedRisk
      requestBody:
        $ref: '#/components/requestBodies/dRisk'
      responses:
        '200':
          $ref: '#/components/responses/200dRisk_post'
    delete:
      x-scope: public
      tags:
       - dRisk
      description: >-
      summary: Deletes an existing dRisk record based on the provided ID.
      operationId: DeletedRisk
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRisk_delete'
    get:
      x-scope: public
      tags:
       - dRisk
      description: >-
      summary: Retrieves a list of all dRisk
      operationId: ListdRisk
      responses:
        '200':
          $ref: '#/components/responses/200dRisk_get'
    patch:
      x-scope: public
      tags:
       - dRisk
      description: >-
      summary: Updates an existing dRisk record.
      operationId: PatchdRisk
      requestBody:
        $ref: '#/components/requestBodies/dRisk'
      responses:
        '200':
          $ref: '#/components/responses/200dRisk_patch'
  /dSystem:
    post:
      x-scope: public
      tags:
       - dSystem
      description: >-
      summary: Creates a new dSystem record.
      operationId: CreatedSystem
      requestBody:
        $ref: '#/components/requestBodies/dSystem'
      responses:
        '200':
          $ref: '#/components/responses/200dSystem_post'
    delete:
      x-scope: public
      tags:
       - dSystem
      description: >-
      summary: Deletes an existing dSystem record based on the provided ID.
      operationId: DeletedSystem
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSystem_delete'
    get:
      x-scope: public
      tags:
       - dSystem
      description: >-
      summary: Retrieves a list of all dSystem
      operationId: ListdSystem
      responses:
        '200':
          $ref: '#/components/responses/200dSystem_get'
    patch:
      x-scope: public
      tags:
       - dSystem
      description: >-
      summary: Updates an existing dSystem record.
      operationId: PatchdSystem
      requestBody:
        $ref: '#/components/requestBodies/dSystem'
      responses:
        '200':
          $ref: '#/components/responses/200dSystem_patch'
  /dBusinessService/{id}:
    get:
      x-scope: public
      tags:
       - dBusinessService
      description: >-
      summary: retrieve an existing dBusinessService record based on the provided ID.
      operationId: RetreivedBusinessService
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessService_get'
  /dRequirement/{id}:
    get:
      x-scope: public
      tags:
       - dRequirement
      description: >-
      summary: retrieve an existing dRequirement record based on the provided ID.
      operationId: RetreivedRequirement
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRequirement_get'
  /dEvent:
    post:
      x-scope: public
      tags:
       - dEvent
      description: >-
      summary: Creates a new dEvent record.
      operationId: CreatedEvent
      requestBody:
        $ref: '#/components/requestBodies/dEvent'
      responses:
        '200':
          $ref: '#/components/responses/200dEvent_post'
    delete:
      x-scope: public
      tags:
       - dEvent
      description: >-
      summary: Deletes an existing dEvent record based on the provided ID.
      operationId: DeletedEvent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dEvent_delete'
    get:
      x-scope: public
      tags:
       - dEvent
      description: >-
      summary: Retrieves a list of all dEvent
      operationId: ListdEvent
      responses:
        '200':
          $ref: '#/components/responses/200dEvent_get'
    patch:
      x-scope: public
      tags:
       - dEvent
      description: >-
      summary: Updates an existing dEvent record.
      operationId: PatchdEvent
      requestBody:
        $ref: '#/components/requestBodies/dEvent'
      responses:
        '200':
          $ref: '#/components/responses/200dEvent_patch'
  /dOrganizationUnit:
    post:
      x-scope: public
      tags:
       - dOrganizationUnit
      description: >-
      summary: Creates a new dOrganizationUnit record.
      operationId: CreatedOrganizationUnit
      requestBody:
        $ref: '#/components/requestBodies/dOrganizationUnit'
      responses:
        '200':
          $ref: '#/components/responses/200dOrganizationUnit_post'
    delete:
      x-scope: public
      tags:
       - dOrganizationUnit
      description: >-
      summary: Deletes an existing dOrganizationUnit record based on the provided ID.
      operationId: DeletedOrganizationUnit
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOrganizationUnit_delete'
    get:
      x-scope: public
      tags:
       - dOrganizationUnit
      description: >-
      summary: Retrieves a list of all dOrganizationUnit
      operationId: ListdOrganizationUnit
      responses:
        '200':
          $ref: '#/components/responses/200dOrganizationUnit_get'
    patch:
      x-scope: public
      tags:
       - dOrganizationUnit
      description: >-
      summary: Updates an existing dOrganizationUnit record.
      operationId: PatchdOrganizationUnit
      requestBody:
        $ref: '#/components/requestBodies/dOrganizationUnit'
      responses:
        '200':
          $ref: '#/components/responses/200dOrganizationUnit_patch'
  /dModelClass:
    post:
      x-scope: public
      tags:
       - dModelClass
      description: >-
      summary: Creates a new dModelClass record.
      operationId: CreatedModelClass
      requestBody:
        $ref: '#/components/requestBodies/dModelClass'
      responses:
        '200':
          $ref: '#/components/responses/200dModelClass_post'
    delete:
      x-scope: public
      tags:
       - dModelClass
      description: >-
      summary: Deletes an existing dModelClass record based on the provided ID.
      operationId: DeletedModelClass
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dModelClass_delete'
    get:
      x-scope: public
      tags:
       - dModelClass
      description: >-
      summary: Retrieves a list of all dModelClass
      operationId: ListdModelClass
      responses:
        '200':
          $ref: '#/components/responses/200dModelClass_get'
    patch:
      x-scope: public
      tags:
       - dModelClass
      description: >-
      summary: Updates an existing dModelClass record.
      operationId: PatchdModelClass
      requestBody:
        $ref: '#/components/requestBodies/dModelClass'
      responses:
        '200':
          $ref: '#/components/responses/200dModelClass_patch'
  /dRequirement:
    post:
      x-scope: public
      tags:
       - dRequirement
      description: >-
      summary: Creates a new dRequirement record.
      operationId: CreatedRequirement
      requestBody:
        $ref: '#/components/requestBodies/dRequirement'
      responses:
        '200':
          $ref: '#/components/responses/200dRequirement_post'
    delete:
      x-scope: public
      tags:
       - dRequirement
      description: >-
      summary: Deletes an existing dRequirement record based on the provided ID.
      operationId: DeletedRequirement
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRequirement_delete'
    get:
      x-scope: public
      tags:
       - dRequirement
      description: >-
      summary: Retrieves a list of all dRequirement
      operationId: ListdRequirement
      responses:
        '200':
          $ref: '#/components/responses/200dRequirement_get'
    patch:
      x-scope: public
      tags:
       - dRequirement
      description: >-
      summary: Updates an existing dRequirement record.
      operationId: PatchdRequirement
      requestBody:
        $ref: '#/components/requestBodies/dRequirement'
      responses:
        '200':
          $ref: '#/components/responses/200dRequirement_patch'
  /dDataEntity/{id}:
    get:
      x-scope: public
      tags:
       - dDataEntity
      description: >-
      summary: retrieve an existing dDataEntity record based on the provided ID.
      operationId: RetreivedDataEntity
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDataEntity_get'
  /dController/{id}:
    get:
      x-scope: public
      tags:
       - dController
      description: >-
      summary: retrieve an existing dController record based on the provided ID.
      operationId: RetreivedController
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dController_get'
  /dOrganizationUnit/{id}:
    get:
      x-scope: public
      tags:
       - dOrganizationUnit
      description: >-
      summary: retrieve an existing dOrganizationUnit record based on the provided ID.
      operationId: RetreivedOrganizationUnit
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOrganizationUnit_get'
  /dBusinessService:
    post:
      x-scope: public
      tags:
       - dBusinessService
      description: >-
      summary: Creates a new dBusinessService record.
      operationId: CreatedBusinessService
      requestBody:
        $ref: '#/components/requestBodies/dBusinessService'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessService_post'
    delete:
      x-scope: public
      tags:
       - dBusinessService
      description: >-
      summary: Deletes an existing dBusinessService record based on the provided ID.
      operationId: DeletedBusinessService
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessService_delete'
    get:
      x-scope: public
      tags:
       - dBusinessService
      description: >-
      summary: Retrieves a list of all dBusinessService
      operationId: ListdBusinessService
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessService_get'
    patch:
      x-scope: public
      tags:
       - dBusinessService
      description: >-
      summary: Updates an existing dBusinessService record.
      operationId: PatchdBusinessService
      requestBody:
        $ref: '#/components/requestBodies/dBusinessService'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessService_patch'
  /dActor/{id}:
    get:
      x-scope: public
      tags:
       - dActor
      description: >-
      summary: retrieve an existing dActor record based on the provided ID.
      operationId: RetreivedActor
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dActor_get'
  /dDecision/{id}:
    get:
      x-scope: public
      tags:
       - dDecision
      description: >-
      summary: retrieve an existing dDecision record based on the provided ID.
      operationId: RetreivedDecision
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDecision_get'
  /dCluster/{id}:
    get:
      x-scope: public
      tags:
       - dCluster
      description: >-
      summary: retrieve an existing dCluster record based on the provided ID.
      operationId: RetreivedCluster
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dCluster_get'
  /dJSON_Schema/{id}:
    get:
      x-scope: public
      tags:
       - dJSON_Schema
      description: >-
      summary: retrieve an existing dJSON_Schema record based on the provided ID.
      operationId: RetreivedJSON_Schema
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dJSON_Schema_get'
  /dMeasurementIndicator:
    post:
      x-scope: public
      tags:
       - dMeasurementIndicator
      description: >-
      summary: Creates a new dMeasurementIndicator record.
      operationId: CreatedMeasurementIndicator
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementIndicator'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementIndicator_post'
    delete:
      x-scope: public
      tags:
       - dMeasurementIndicator
      description: >-
      summary: Deletes an existing dMeasurementIndicator record based on the provided ID.
      operationId: DeletedMeasurementIndicator
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementIndicator_delete'
    get:
      x-scope: public
      tags:
       - dMeasurementIndicator
      description: >-
      summary: Retrieves a list of all dMeasurementIndicator
      operationId: ListdMeasurementIndicator
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementIndicator_get'
    patch:
      x-scope: public
      tags:
       - dMeasurementIndicator
      description: >-
      summary: Updates an existing dMeasurementIndicator record.
      operationId: PatchdMeasurementIndicator
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementIndicator'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementIndicator_patch'
  /dEvent/{id}:
    get:
      x-scope: public
      tags:
       - dEvent
      description: >-
      summary: retrieve an existing dEvent record based on the provided ID.
      operationId: RetreivedEvent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dEvent_get'
  /dMeasurementCategory:
    post:
      x-scope: public
      tags:
       - dMeasurementCategory
      description: >-
      summary: Creates a new dMeasurementCategory record.
      operationId: CreatedMeasurementCategory
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementCategory'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementCategory_post'
    delete:
      x-scope: public
      tags:
       - dMeasurementCategory
      description: >-
      summary: Deletes an existing dMeasurementCategory record based on the provided ID.
      operationId: DeletedMeasurementCategory
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementCategory_delete'
    get:
      x-scope: public
      tags:
       - dMeasurementCategory
      description: >-
      summary: Retrieves a list of all dMeasurementCategory
      operationId: ListdMeasurementCategory
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementCategory_get'
    patch:
      x-scope: public
      tags:
       - dMeasurementCategory
      description: >-
      summary: Updates an existing dMeasurementCategory record.
      operationId: PatchdMeasurementCategory
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementCategory'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementCategory_patch'
  /dView:
    post:
      x-scope: public
      tags:
       - dView
      description: >-
      summary: Creates a new dView record.
      operationId: CreatedView
      requestBody:
        $ref: '#/components/requestBodies/dView'
      responses:
        '200':
          $ref: '#/components/responses/200dView_post'
    delete:
      x-scope: public
      tags:
       - dView
      description: >-
      summary: Deletes an existing dView record based on the provided ID.
      operationId: DeletedView
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dView_delete'
    get:
      x-scope: public
      tags:
       - dView
      description: >-
      summary: Retrieves a list of all dView
      operationId: ListdView
      responses:
        '200':
          $ref: '#/components/responses/200dView_get'
    patch:
      x-scope: public
      tags:
       - dView
      description: >-
      summary: Updates an existing dView record.
      operationId: PatchdView
      requestBody:
        $ref: '#/components/requestBodies/dView'
      responses:
        '200':
          $ref: '#/components/responses/200dView_patch'
  /dDataEntity:
    post:
      x-scope: public
      tags:
       - dDataEntity
      description: >-
      summary: Creates a new dDataEntity record.
      operationId: CreatedDataEntity
      requestBody:
        $ref: '#/components/requestBodies/dDataEntity'
      responses:
        '200':
          $ref: '#/components/responses/200dDataEntity_post'
    delete:
      x-scope: public
      tags:
       - dDataEntity
      description: >-
      summary: Deletes an existing dDataEntity record based on the provided ID.
      operationId: DeletedDataEntity
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDataEntity_delete'
    get:
      x-scope: public
      tags:
       - dDataEntity
      description: >-
      summary: Retrieves a list of all dDataEntity
      operationId: ListdDataEntity
      responses:
        '200':
          $ref: '#/components/responses/200dDataEntity_get'
    patch:
      x-scope: public
      tags:
       - dDataEntity
      description: >-
      summary: Updates an existing dDataEntity record.
      operationId: PatchdDataEntity
      requestBody:
        $ref: '#/components/requestBodies/dDataEntity'
      responses:
        '200':
          $ref: '#/components/responses/200dDataEntity_patch'
  /dOpinion/{id}:
    get:
      x-scope: public
      tags:
       - dOpinion
      description: >-
      summary: retrieve an existing dOpinion record based on the provided ID.
      operationId: RetreivedOpinion
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinion_get'
  /dContainer/{id}:
    get:
      x-scope: public
      tags:
       - dContainer
      description: >-
      summary: retrieve an existing dContainer record based on the provided ID.
      operationId: RetreivedContainer
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dContainer_get'
  /dTable/{id}:
    get:
      x-scope: public
      tags:
       - dTable
      description: >-
      summary: retrieve an existing dTable record based on the provided ID.
      operationId: RetreivedTable
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dTable_get'
  /dLocation:
    post:
      x-scope: public
      tags:
       - dLocation
      description: >-
      summary: Creates a new dLocation record.
      operationId: CreatedLocation
      requestBody:
        $ref: '#/components/requestBodies/dLocation'
      responses:
        '200':
          $ref: '#/components/responses/200dLocation_post'
    delete:
      x-scope: public
      tags:
       - dLocation
      description: >-
      summary: Deletes an existing dLocation record based on the provided ID.
      operationId: DeletedLocation
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dLocation_delete'
    get:
      x-scope: public
      tags:
       - dLocation
      description: >-
      summary: Retrieves a list of all dLocation
      operationId: ListdLocation
      responses:
        '200':
          $ref: '#/components/responses/200dLocation_get'
    patch:
      x-scope: public
      tags:
       - dLocation
      description: >-
      summary: Updates an existing dLocation record.
      operationId: PatchdLocation
      requestBody:
        $ref: '#/components/requestBodies/dLocation'
      responses:
        '200':
          $ref: '#/components/responses/200dLocation_patch'
  /dSkill:
    post:
      x-scope: public
      tags:
       - dSkill
      description: >-
      summary: Creates a new dSkill record.
      operationId: CreatedSkill
      requestBody:
        $ref: '#/components/requestBodies/dSkill'
      responses:
        '200':
          $ref: '#/components/responses/200dSkill_post'
    delete:
      x-scope: public
      tags:
       - dSkill
      description: >-
      summary: Deletes an existing dSkill record based on the provided ID.
      operationId: DeletedSkill
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSkill_delete'
    get:
      x-scope: public
      tags:
       - dSkill
      description: >-
      summary: Retrieves a list of all dSkill
      operationId: ListdSkill
      responses:
        '200':
          $ref: '#/components/responses/200dSkill_get'
    patch:
      x-scope: public
      tags:
       - dSkill
      description: >-
      summary: Updates an existing dSkill record.
      operationId: PatchdSkill
      requestBody:
        $ref: '#/components/requestBodies/dSkill'
      responses:
        '200':
          $ref: '#/components/responses/200dSkill_patch'
  /dSubNetwork:
    post:
      x-scope: public
      tags:
       - dSubNetwork
      description: >-
      summary: Creates a new dSubNetwork record.
      operationId: CreatedSubNetwork
      requestBody:
        $ref: '#/components/requestBodies/dSubNetwork'
      responses:
        '200':
          $ref: '#/components/responses/200dSubNetwork_post'
    delete:
      x-scope: public
      tags:
       - dSubNetwork
      description: >-
      summary: Deletes an existing dSubNetwork record based on the provided ID.
      operationId: DeletedSubNetwork
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSubNetwork_delete'
    get:
      x-scope: public
      tags:
       - dSubNetwork
      description: >-
      summary: Retrieves a list of all dSubNetwork
      operationId: ListdSubNetwork
      responses:
        '200':
          $ref: '#/components/responses/200dSubNetwork_get'
    patch:
      x-scope: public
      tags:
       - dSubNetwork
      description: >-
      summary: Updates an existing dSubNetwork record.
      operationId: PatchdSubNetwork
      requestBody:
        $ref: '#/components/requestBodies/dSubNetwork'
      responses:
        '200':
          $ref: '#/components/responses/200dSubNetwork_patch'
  /dRegion:
    post:
      x-scope: public
      tags:
       - dRegion
      description: >-
      summary: Creates a new dRegion record.
      operationId: CreatedRegion
      requestBody:
        $ref: '#/components/requestBodies/dRegion'
      responses:
        '200':
          $ref: '#/components/responses/200dRegion_post'
    delete:
      x-scope: public
      tags:
       - dRegion
      description: >-
      summary: Deletes an existing dRegion record based on the provided ID.
      operationId: DeletedRegion
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRegion_delete'
    get:
      x-scope: public
      tags:
       - dRegion
      description: >-
      summary: Retrieves a list of all dRegion
      operationId: ListdRegion
      responses:
        '200':
          $ref: '#/components/responses/200dRegion_get'
    patch:
      x-scope: public
      tags:
       - dRegion
      description: >-
      summary: Updates an existing dRegion record.
      operationId: PatchdRegion
      requestBody:
        $ref: '#/components/requestBodies/dRegion'
      responses:
        '200':
          $ref: '#/components/responses/200dRegion_patch'
  /dTest:
    post:
      x-scope: public
      tags:
       - dTest
      description: >-
      summary: Creates a new dTest record.
      operationId: CreatedTest
      requestBody:
        $ref: '#/components/requestBodies/dTest'
      responses:
        '200':
          $ref: '#/components/responses/200dTest_post'
    delete:
      x-scope: public
      tags:
       - dTest
      description: >-
      summary: Deletes an existing dTest record based on the provided ID.
      operationId: DeletedTest
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dTest_delete'
    get:
      x-scope: public
      tags:
       - dTest
      description: >-
      summary: Retrieves a list of all dTest
      operationId: ListdTest
      responses:
        '200':
          $ref: '#/components/responses/200dTest_get'
    patch:
      x-scope: public
      tags:
       - dTest
      description: >-
      summary: Updates an existing dTest record.
      operationId: PatchdTest
      requestBody:
        $ref: '#/components/requestBodies/dTest'
      responses:
        '200':
          $ref: '#/components/responses/200dTest_patch'
  /dCluster:
    post:
      x-scope: public
      tags:
       - dCluster
      description: >-
      summary: Creates a new dCluster record.
      operationId: CreatedCluster
      requestBody:
        $ref: '#/components/requestBodies/dCluster'
      responses:
        '200':
          $ref: '#/components/responses/200dCluster_post'
    delete:
      x-scope: public
      tags:
       - dCluster
      description: >-
      summary: Deletes an existing dCluster record based on the provided ID.
      operationId: DeletedCluster
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dCluster_delete'
    get:
      x-scope: public
      tags:
       - dCluster
      description: >-
      summary: Retrieves a list of all dCluster
      operationId: ListdCluster
      responses:
        '200':
          $ref: '#/components/responses/200dCluster_get'
    patch:
      x-scope: public
      tags:
       - dCluster
      description: >-
      summary: Updates an existing dCluster record.
      operationId: PatchdCluster
      requestBody:
        $ref: '#/components/requestBodies/dCluster'
      responses:
        '200':
          $ref: '#/components/responses/200dCluster_patch'
  /dRegion/{id}:
    get:
      x-scope: public
      tags:
       - dRegion
      description: >-
      summary: retrieve an existing dRegion record based on the provided ID.
      operationId: RetreivedRegion
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRegion_get'
  /dSkill/{id}:
    get:
      x-scope: public
      tags:
       - dSkill
      description: >-
      summary: retrieve an existing dSkill record based on the provided ID.
      operationId: RetreivedSkill
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSkill_get'
  /dApplicationFunction:
    post:
      x-scope: public
      tags:
       - dApplicationFunction
      description: >-
      summary: Creates a new dApplicationFunction record.
      operationId: CreatedApplicationFunction
      requestBody:
        $ref: '#/components/requestBodies/dApplicationFunction'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationFunction_post'
    delete:
      x-scope: public
      tags:
       - dApplicationFunction
      description: >-
      summary: Deletes an existing dApplicationFunction record based on the provided ID.
      operationId: DeletedApplicationFunction
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationFunction_delete'
    get:
      x-scope: public
      tags:
       - dApplicationFunction
      description: >-
      summary: Retrieves a list of all dApplicationFunction
      operationId: ListdApplicationFunction
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationFunction_get'
    patch:
      x-scope: public
      tags:
       - dApplicationFunction
      description: >-
      summary: Updates an existing dApplicationFunction record.
      operationId: PatchdApplicationFunction
      requestBody:
        $ref: '#/components/requestBodies/dApplicationFunction'
      responses:
        '200':
          $ref: '#/components/responses/200dApplicationFunction_patch'
  /dBusinessArea:
    post:
      x-scope: public
      tags:
       - dBusinessArea
      description: >-
      summary: Creates a new dBusinessArea record.
      operationId: CreatedBusinessArea
      requestBody:
        $ref: '#/components/requestBodies/dBusinessArea'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessArea_post'
    delete:
      x-scope: public
      tags:
       - dBusinessArea
      description: >-
      summary: Deletes an existing dBusinessArea record based on the provided ID.
      operationId: DeletedBusinessArea
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessArea_delete'
    get:
      x-scope: public
      tags:
       - dBusinessArea
      description: >-
      summary: Retrieves a list of all dBusinessArea
      operationId: ListdBusinessArea
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessArea_get'
    patch:
      x-scope: public
      tags:
       - dBusinessArea
      description: >-
      summary: Updates an existing dBusinessArea record.
      operationId: PatchdBusinessArea
      requestBody:
        $ref: '#/components/requestBodies/dBusinessArea'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessArea_patch'
  /dDeploymentNode:
    post:
      x-scope: public
      tags:
       - dDeploymentNode
      description: >-
      summary: Creates a new dDeploymentNode record.
      operationId: CreatedDeploymentNode
      requestBody:
        $ref: '#/components/requestBodies/dDeploymentNode'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentNode_post'
    delete:
      x-scope: public
      tags:
       - dDeploymentNode
      description: >-
      summary: Deletes an existing dDeploymentNode record based on the provided ID.
      operationId: DeletedDeploymentNode
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentNode_delete'
    get:
      x-scope: public
      tags:
       - dDeploymentNode
      description: >-
      summary: Retrieves a list of all dDeploymentNode
      operationId: ListdDeploymentNode
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentNode_get'
    patch:
      x-scope: public
      tags:
       - dDeploymentNode
      description: >-
      summary: Updates an existing dDeploymentNode record.
      operationId: PatchdDeploymentNode
      requestBody:
        $ref: '#/components/requestBodies/dDeploymentNode'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentNode_patch'
  /dInitiative:
    post:
      x-scope: public
      tags:
       - dInitiative
      description: >-
      summary: Creates a new dInitiative record.
      operationId: CreatedInitiative
      requestBody:
        $ref: '#/components/requestBodies/dInitiative'
      responses:
        '200':
          $ref: '#/components/responses/200dInitiative_post'
    delete:
      x-scope: public
      tags:
       - dInitiative
      description: >-
      summary: Deletes an existing dInitiative record based on the provided ID.
      operationId: DeletedInitiative
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dInitiative_delete'
    get:
      x-scope: public
      tags:
       - dInitiative
      description: >-
      summary: Retrieves a list of all dInitiative
      operationId: ListdInitiative
      responses:
        '200':
          $ref: '#/components/responses/200dInitiative_get'
    patch:
      x-scope: public
      tags:
       - dInitiative
      description: >-
      summary: Updates an existing dInitiative record.
      operationId: PatchdInitiative
      requestBody:
        $ref: '#/components/requestBodies/dInitiative'
      responses:
        '200':
          $ref: '#/components/responses/200dInitiative_patch'
  /dProduct/{id}:
    get:
      x-scope: public
      tags:
       - dProduct
      description: >-
      summary: retrieve an existing dProduct record based on the provided ID.
      operationId: RetreivedProduct
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dProduct_get'
  /dFeature/{id}:
    get:
      x-scope: public
      tags:
       - dFeature
      description: >-
      summary: retrieve an existing dFeature record based on the provided ID.
      operationId: RetreivedFeature
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dFeature_get'
  /dMeasurementGrouping:
    post:
      x-scope: public
      tags:
       - dMeasurementGrouping
      description: >-
      summary: Creates a new dMeasurementGrouping record.
      operationId: CreatedMeasurementGrouping
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementGrouping'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementGrouping_post'
    delete:
      x-scope: public
      tags:
       - dMeasurementGrouping
      description: >-
      summary: Deletes an existing dMeasurementGrouping record based on the provided ID.
      operationId: DeletedMeasurementGrouping
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementGrouping_delete'
    get:
      x-scope: public
      tags:
       - dMeasurementGrouping
      description: >-
      summary: Retrieves a list of all dMeasurementGrouping
      operationId: ListdMeasurementGrouping
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementGrouping_get'
    patch:
      x-scope: public
      tags:
       - dMeasurementGrouping
      description: >-
      summary: Updates an existing dMeasurementGrouping record.
      operationId: PatchdMeasurementGrouping
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementGrouping'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementGrouping_patch'
  /dNetwork/{id}:
    get:
      x-scope: public
      tags:
       - dNetwork
      description: >-
      summary: retrieve an existing dNetwork record based on the provided ID.
      operationId: RetreivedNetwork
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dNetwork_get'
  /dZone:
    post:
      x-scope: public
      tags:
       - dZone
      description: >-
      summary: Creates a new dZone record.
      operationId: CreatedZone
      requestBody:
        $ref: '#/components/requestBodies/dZone'
      responses:
        '200':
          $ref: '#/components/responses/200dZone_post'
    delete:
      x-scope: public
      tags:
       - dZone
      description: >-
      summary: Deletes an existing dZone record based on the provided ID.
      operationId: DeletedZone
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dZone_delete'
    get:
      x-scope: public
      tags:
       - dZone
      description: >-
      summary: Retrieves a list of all dZone
      operationId: ListdZone
      responses:
        '200':
          $ref: '#/components/responses/200dZone_get'
    patch:
      x-scope: public
      tags:
       - dZone
      description: >-
      summary: Updates an existing dZone record.
      operationId: PatchdZone
      requestBody:
        $ref: '#/components/requestBodies/dZone'
      responses:
        '200':
          $ref: '#/components/responses/200dZone_patch'
  /dLocation/{id}:
    get:
      x-scope: public
      tags:
       - dLocation
      description: >-
      summary: retrieve an existing dLocation record based on the provided ID.
      operationId: RetreivedLocation
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dLocation_get'
  /dOpinionInner:
    post:
      x-scope: public
      tags:
       - dOpinionInner
      description: >-
      summary: Creates a new dOpinionInner record.
      operationId: CreatedOpinionInner
      requestBody:
        $ref: '#/components/requestBodies/dOpinionInner'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinionInner_post'
    delete:
      x-scope: public
      tags:
       - dOpinionInner
      description: >-
      summary: Deletes an existing dOpinionInner record based on the provided ID.
      operationId: DeletedOpinionInner
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinionInner_delete'
    get:
      x-scope: public
      tags:
       - dOpinionInner
      description: >-
      summary: Retrieves a list of all dOpinionInner
      operationId: ListdOpinionInner
      responses:
        '200':
          $ref: '#/components/responses/200dOpinionInner_get'
    patch:
      x-scope: public
      tags:
       - dOpinionInner
      description: >-
      summary: Updates an existing dOpinionInner record.
      operationId: PatchdOpinionInner
      requestBody:
        $ref: '#/components/requestBodies/dOpinionInner'
      responses:
        '200':
          $ref: '#/components/responses/200dOpinionInner_patch'
  /dNetwork:
    post:
      x-scope: public
      tags:
       - dNetwork
      description: >-
      summary: Creates a new dNetwork record.
      operationId: CreatedNetwork
      requestBody:
        $ref: '#/components/requestBodies/dNetwork'
      responses:
        '200':
          $ref: '#/components/responses/200dNetwork_post'
    delete:
      x-scope: public
      tags:
       - dNetwork
      description: >-
      summary: Deletes an existing dNetwork record based on the provided ID.
      operationId: DeletedNetwork
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dNetwork_delete'
    get:
      x-scope: public
      tags:
       - dNetwork
      description: >-
      summary: Retrieves a list of all dNetwork
      operationId: ListdNetwork
      responses:
        '200':
          $ref: '#/components/responses/200dNetwork_get'
    patch:
      x-scope: public
      tags:
       - dNetwork
      description: >-
      summary: Updates an existing dNetwork record.
      operationId: PatchdNetwork
      requestBody:
        $ref: '#/components/requestBodies/dNetwork'
      responses:
        '200':
          $ref: '#/components/responses/200dNetwork_patch'
  /dAPI/{id}:
    get:
      x-scope: public
      tags:
       - dAPI
      description: >-
      summary: retrieve an existing dAPI record based on the provided ID.
      operationId: RetreivedAPI
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dAPI_get'
  /dMeasurementIndicator/{id}:
    get:
      x-scope: public
      tags:
       - dMeasurementIndicator
      description: >-
      summary: retrieve an existing dMeasurementIndicator record based on the provided ID.
      operationId: RetreivedMeasurementIndicator
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementIndicator_get'
  /dRisk/{id}:
    get:
      x-scope: public
      tags:
       - dRisk
      description: >-
      summary: retrieve an existing dRisk record based on the provided ID.
      operationId: RetreivedRisk
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRisk_get'
  /dMeasurementArea:
    post:
      x-scope: public
      tags:
       - dMeasurementArea
      description: >-
      summary: Creates a new dMeasurementArea record.
      operationId: CreatedMeasurementArea
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementArea'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementArea_post'
    delete:
      x-scope: public
      tags:
       - dMeasurementArea
      description: >-
      summary: Deletes an existing dMeasurementArea record based on the provided ID.
      operationId: DeletedMeasurementArea
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementArea_delete'
    get:
      x-scope: public
      tags:
       - dMeasurementArea
      description: >-
      summary: Retrieves a list of all dMeasurementArea
      operationId: ListdMeasurementArea
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementArea_get'
    patch:
      x-scope: public
      tags:
       - dMeasurementArea
      description: >-
      summary: Updates an existing dMeasurementArea record.
      operationId: PatchdMeasurementArea
      requestBody:
        $ref: '#/components/requestBodies/dMeasurementArea'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementArea_patch'
  /dDecision:
    post:
      x-scope: public
      tags:
       - dDecision
      description: >-
      summary: Creates a new dDecision record.
      operationId: CreatedDecision
      requestBody:
        $ref: '#/components/requestBodies/dDecision'
      responses:
        '200':
          $ref: '#/components/responses/200dDecision_post'
    delete:
      x-scope: public
      tags:
       - dDecision
      description: >-
      summary: Deletes an existing dDecision record based on the provided ID.
      operationId: DeletedDecision
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDecision_delete'
    get:
      x-scope: public
      tags:
       - dDecision
      description: >-
      summary: Retrieves a list of all dDecision
      operationId: ListdDecision
      responses:
        '200':
          $ref: '#/components/responses/200dDecision_get'
    patch:
      x-scope: public
      tags:
       - dDecision
      description: >-
      summary: Updates an existing dDecision record.
      operationId: PatchdDecision
      requestBody:
        $ref: '#/components/requestBodies/dDecision'
      responses:
        '200':
          $ref: '#/components/responses/200dDecision_patch'
  /dStakeholder:
    post:
      x-scope: public
      tags:
       - dStakeholder
      description: >-
      summary: Creates a new dStakeholder record.
      operationId: CreatedStakeholder
      requestBody:
        $ref: '#/components/requestBodies/dStakeholder'
      responses:
        '200':
          $ref: '#/components/responses/200dStakeholder_post'
    delete:
      x-scope: public
      tags:
       - dStakeholder
      description: >-
      summary: Deletes an existing dStakeholder record based on the provided ID.
      operationId: DeletedStakeholder
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dStakeholder_delete'
    get:
      x-scope: public
      tags:
       - dStakeholder
      description: >-
      summary: Retrieves a list of all dStakeholder
      operationId: ListdStakeholder
      responses:
        '200':
          $ref: '#/components/responses/200dStakeholder_get'
    patch:
      x-scope: public
      tags:
       - dStakeholder
      description: >-
      summary: Updates an existing dStakeholder record.
      operationId: PatchdStakeholder
      requestBody:
        $ref: '#/components/requestBodies/dStakeholder'
      responses:
        '200':
          $ref: '#/components/responses/200dStakeholder_patch'
  /dVolume:
    post:
      x-scope: public
      tags:
       - dVolume
      description: >-
      summary: Creates a new dVolume record.
      operationId: CreatedVolume
      requestBody:
        $ref: '#/components/requestBodies/dVolume'
      responses:
        '200':
          $ref: '#/components/responses/200dVolume_post'
    delete:
      x-scope: public
      tags:
       - dVolume
      description: >-
      summary: Deletes an existing dVolume record based on the provided ID.
      operationId: DeletedVolume
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dVolume_delete'
    get:
      x-scope: public
      tags:
       - dVolume
      description: >-
      summary: Retrieves a list of all dVolume
      operationId: ListdVolume
      responses:
        '200':
          $ref: '#/components/responses/200dVolume_get'
    patch:
      x-scope: public
      tags:
       - dVolume
      description: >-
      summary: Updates an existing dVolume record.
      operationId: PatchdVolume
      requestBody:
        $ref: '#/components/requestBodies/dVolume'
      responses:
        '200':
          $ref: '#/components/responses/200dVolume_patch'
  /dLogicalAppComponent/{id}:
    get:
      x-scope: public
      tags:
       - dLogicalAppComponent
      description: >-
      summary: retrieve an existing dLogicalAppComponent record based on the provided ID.
      operationId: RetreivedLogicalAppComponent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dLogicalAppComponent_get'
  /dMeasurementCategory/{id}:
    get:
      x-scope: public
      tags:
       - dMeasurementCategory
      description: >-
      summary: retrieve an existing dMeasurementCategory record based on the provided ID.
      operationId: RetreivedMeasurementCategory
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementCategory_get'
  /dIssue:
    post:
      x-scope: public
      tags:
       - dIssue
      description: >-
      summary: Creates a new dIssue record.
      operationId: CreatedIssue
      requestBody:
        $ref: '#/components/requestBodies/dIssue'
      responses:
        '200':
          $ref: '#/components/responses/200dIssue_post'
    delete:
      x-scope: public
      tags:
       - dIssue
      description: >-
      summary: Deletes an existing dIssue record based on the provided ID.
      operationId: DeletedIssue
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dIssue_delete'
    get:
      x-scope: public
      tags:
       - dIssue
      description: >-
      summary: Retrieves a list of all dIssue
      operationId: ListdIssue
      responses:
        '200':
          $ref: '#/components/responses/200dIssue_get'
    patch:
      x-scope: public
      tags:
       - dIssue
      description: >-
      summary: Updates an existing dIssue record.
      operationId: PatchdIssue
      requestBody:
        $ref: '#/components/requestBodies/dIssue'
      responses:
        '200':
          $ref: '#/components/responses/200dIssue_patch'
  /dProgram:
    post:
      x-scope: public
      tags:
       - dProgram
      description: >-
      summary: Creates a new dProgram record.
      operationId: CreatedProgram
      requestBody:
        $ref: '#/components/requestBodies/dProgram'
      responses:
        '200':
          $ref: '#/components/responses/200dProgram_post'
    delete:
      x-scope: public
      tags:
       - dProgram
      description: >-
      summary: Deletes an existing dProgram record based on the provided ID.
      operationId: DeletedProgram
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dProgram_delete'
    get:
      x-scope: public
      tags:
       - dProgram
      description: >-
      summary: Retrieves a list of all dProgram
      operationId: ListdProgram
      responses:
        '200':
          $ref: '#/components/responses/200dProgram_get'
    patch:
      x-scope: public
      tags:
       - dProgram
      description: >-
      summary: Updates an existing dProgram record.
      operationId: PatchdProgram
      requestBody:
        $ref: '#/components/requestBodies/dProgram'
      responses:
        '200':
          $ref: '#/components/responses/200dProgram_patch'
  /dMeasurementArea/{id}:
    get:
      x-scope: public
      tags:
       - dMeasurementArea
      description: >-
      summary: retrieve an existing dMeasurementArea record based on the provided ID.
      operationId: RetreivedMeasurementArea
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementArea_get'
  /dStakeholder/{id}:
    get:
      x-scope: public
      tags:
       - dStakeholder
      description: >-
      summary: retrieve an existing dStakeholder record based on the provided ID.
      operationId: RetreivedStakeholder
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dStakeholder_get'
  /dSubNetwork/{id}:
    get:
      x-scope: public
      tags:
       - dSubNetwork
      description: >-
      summary: retrieve an existing dSubNetwork record based on the provided ID.
      operationId: RetreivedSubNetwork
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dSubNetwork_get'
  /dBusinessUseCase/{id}:
    get:
      x-scope: public
      tags:
       - dBusinessUseCase
      description: >-
      summary: retrieve an existing dBusinessUseCase record based on the provided ID.
      operationId: RetreivedBusinessUseCase
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessUseCase_get'
  /dDeploymentModel:
    post:
      x-scope: public
      tags:
       - dDeploymentModel
      description: >-
      summary: Creates a new dDeploymentModel record.
      operationId: CreatedDeploymentModel
      requestBody:
        $ref: '#/components/requestBodies/dDeploymentModel'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentModel_post'
    delete:
      x-scope: public
      tags:
       - dDeploymentModel
      description: >-
      summary: Deletes an existing dDeploymentModel record based on the provided ID.
      operationId: DeletedDeploymentModel
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentModel_delete'
    get:
      x-scope: public
      tags:
       - dDeploymentModel
      description: >-
      summary: Retrieves a list of all dDeploymentModel
      operationId: ListdDeploymentModel
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentModel_get'
    patch:
      x-scope: public
      tags:
       - dDeploymentModel
      description: >-
      summary: Updates an existing dDeploymentModel record.
      operationId: PatchdDeploymentModel
      requestBody:
        $ref: '#/components/requestBodies/dDeploymentModel'
      responses:
        '200':
          $ref: '#/components/responses/200dDeploymentModel_patch'
  /dCapability/{id}:
    get:
      x-scope: public
      tags:
       - dCapability
      description: >-
      summary: retrieve an existing dCapability record based on the provided ID.
      operationId: RetreivedCapability
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dCapability_get'
  /dGoal/{id}:
    get:
      x-scope: public
      tags:
       - dGoal
      description: >-
      summary: retrieve an existing dGoal record based on the provided ID.
      operationId: RetreivedGoal
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dGoal_get'
  /dRole:
    post:
      x-scope: public
      tags:
       - dRole
      description: >-
      summary: Creates a new dRole record.
      operationId: CreatedRole
      requestBody:
        $ref: '#/components/requestBodies/dRole'
      responses:
        '200':
          $ref: '#/components/responses/200dRole_post'
    delete:
      x-scope: public
      tags:
       - dRole
      description: >-
      summary: Deletes an existing dRole record based on the provided ID.
      operationId: DeletedRole
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dRole_delete'
    get:
      x-scope: public
      tags:
       - dRole
      description: >-
      summary: Retrieves a list of all dRole
      operationId: ListdRole
      responses:
        '200':
          $ref: '#/components/responses/200dRole_get'
    patch:
      x-scope: public
      tags:
       - dRole
      description: >-
      summary: Updates an existing dRole record.
      operationId: PatchdRole
      requestBody:
        $ref: '#/components/requestBodies/dRole'
      responses:
        '200':
          $ref: '#/components/responses/200dRole_patch'
  /dVolume/{id}:
    get:
      x-scope: public
      tags:
       - dVolume
      description: >-
      summary: retrieve an existing dVolume record based on the provided ID.
      operationId: RetreivedVolume
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dVolume_get'
  /dBusinessUseCase:
    post:
      x-scope: public
      tags:
       - dBusinessUseCase
      description: >-
      summary: Creates a new dBusinessUseCase record.
      operationId: CreatedBusinessUseCase
      requestBody:
        $ref: '#/components/requestBodies/dBusinessUseCase'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessUseCase_post'
    delete:
      x-scope: public
      tags:
       - dBusinessUseCase
      description: >-
      summary: Deletes an existing dBusinessUseCase record based on the provided ID.
      operationId: DeletedBusinessUseCase
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessUseCase_delete'
    get:
      x-scope: public
      tags:
       - dBusinessUseCase
      description: >-
      summary: Retrieves a list of all dBusinessUseCase
      operationId: ListdBusinessUseCase
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessUseCase_get'
    patch:
      x-scope: public
      tags:
       - dBusinessUseCase
      description: >-
      summary: Updates an existing dBusinessUseCase record.
      operationId: PatchdBusinessUseCase
      requestBody:
        $ref: '#/components/requestBodies/dBusinessUseCase'
      responses:
        '200':
          $ref: '#/components/responses/200dBusinessUseCase_patch'
  /dObjective:
    post:
      x-scope: public
      tags:
       - dObjective
      description: >-
      summary: Creates a new dObjective record.
      operationId: CreatedObjective
      requestBody:
        $ref: '#/components/requestBodies/dObjective'
      responses:
        '200':
          $ref: '#/components/responses/200dObjective_post'
    delete:
      x-scope: public
      tags:
       - dObjective
      description: >-
      summary: Deletes an existing dObjective record based on the provided ID.
      operationId: DeletedObjective
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dObjective_delete'
    get:
      x-scope: public
      tags:
       - dObjective
      description: >-
      summary: Retrieves a list of all dObjective
      operationId: ListdObjective
      responses:
        '200':
          $ref: '#/components/responses/200dObjective_get'
    patch:
      x-scope: public
      tags:
       - dObjective
      description: >-
      summary: Updates an existing dObjective record.
      operationId: PatchdObjective
      requestBody:
        $ref: '#/components/requestBodies/dObjective'
      responses:
        '200':
          $ref: '#/components/responses/200dObjective_patch'
  /dLogicalAppComponent:
    post:
      x-scope: public
      tags:
       - dLogicalAppComponent
      description: >-
      summary: Creates a new dLogicalAppComponent record.
      operationId: CreatedLogicalAppComponent
      requestBody:
        $ref: '#/components/requestBodies/dLogicalAppComponent'
      responses:
        '200':
          $ref: '#/components/responses/200dLogicalAppComponent_post'
    delete:
      x-scope: public
      tags:
       - dLogicalAppComponent
      description: >-
      summary: Deletes an existing dLogicalAppComponent record based on the provided ID.
      operationId: DeletedLogicalAppComponent
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dLogicalAppComponent_delete'
    get:
      x-scope: public
      tags:
       - dLogicalAppComponent
      description: >-
      summary: Retrieves a list of all dLogicalAppComponent
      operationId: ListdLogicalAppComponent
      responses:
        '200':
          $ref: '#/components/responses/200dLogicalAppComponent_get'
    patch:
      x-scope: public
      tags:
       - dLogicalAppComponent
      description: >-
      summary: Updates an existing dLogicalAppComponent record.
      operationId: PatchdLogicalAppComponent
      requestBody:
        $ref: '#/components/requestBodies/dLogicalAppComponent'
      responses:
        '200':
          $ref: '#/components/responses/200dLogicalAppComponent_patch'
  /dMeasurementGrouping/{id}:
    get:
      x-scope: public
      tags:
       - dMeasurementGrouping
      description: >-
      summary: retrieve an existing dMeasurementGrouping record based on the provided ID.
      operationId: RetreivedMeasurementGrouping
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dMeasurementGrouping_get'
  /dObject/{id}:
    get:
      x-scope: public
      tags:
       - dObject
      description: >-
      summary: retrieve an existing dObject record based on the provided ID.
      operationId: RetreivedObject
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dObject_get'
  /dIssue/{id}:
    get:
      x-scope: public
      tags:
       - dIssue
      description: >-
      summary: retrieve an existing dIssue record based on the provided ID.
      operationId: RetreivedIssue
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dIssue_get'
  /dPrinciple:
    post:
      x-scope: public
      tags:
       - dPrinciple
      description: >-
      summary: Creates a new dPrinciple record.
      operationId: CreatedPrinciple
      requestBody:
        $ref: '#/components/requestBodies/dPrinciple'
      responses:
        '200':
          $ref: '#/components/responses/200dPrinciple_post'
    delete:
      x-scope: public
      tags:
       - dPrinciple
      description: >-
      summary: Deletes an existing dPrinciple record based on the provided ID.
      operationId: DeletedPrinciple
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dPrinciple_delete'
    get:
      x-scope: public
      tags:
       - dPrinciple
      description: >-
      summary: Retrieves a list of all dPrinciple
      operationId: ListdPrinciple
      responses:
        '200':
          $ref: '#/components/responses/200dPrinciple_get'
    patch:
      x-scope: public
      tags:
       - dPrinciple
      description: >-
      summary: Updates an existing dPrinciple record.
      operationId: PatchdPrinciple
      requestBody:
        $ref: '#/components/requestBodies/dPrinciple'
      responses:
        '200':
          $ref: '#/components/responses/200dPrinciple_patch'
  /dResource:
    post:
      x-scope: public
      tags:
       - dResource
      description: >-
      summary: Creates a new dResource record.
      operationId: CreatedResource
      requestBody:
        $ref: '#/components/requestBodies/dResource'
      responses:
        '200':
          $ref: '#/components/responses/200dResource_post'
    delete:
      x-scope: public
      tags:
       - dResource
      description: >-
      summary: Deletes an existing dResource record based on the provided ID.
      operationId: DeletedResource
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dResource_delete'
    get:
      x-scope: public
      tags:
       - dResource
      description: >-
      summary: Retrieves a list of all dResource
      operationId: ListdResource
      responses:
        '200':
          $ref: '#/components/responses/200dResource_get'
    patch:
      x-scope: public
      tags:
       - dResource
      description: >-
      summary: Updates an existing dResource record.
      operationId: PatchdResource
      requestBody:
        $ref: '#/components/requestBodies/dResource'
      responses:
        '200':
          $ref: '#/components/responses/200dResource_patch'
  /dResource/{id}:
    get:
      x-scope: public
      tags:
       - dResource
      description: >-
      summary: retrieve an existing dResource record based on the provided ID.
      operationId: RetreivedResource
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/200dResource_get'
components:
  schemas:
    dActor:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            FTEs:
              type: string
              description: >-
                number of employees working in this function
            ActorGoal:
              type: string
              description: >-
            ActorType:
              type: string
              description: >-
            ActorTasks:
              type: string
              description: >-
            dBusinessUseCase:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessUseCase'
            dRole:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRole'
    dBusinessUseCase:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            GoalInContext:
              type: string
              description: >-
            Precondition:
              type: string
              description: >-
            Trigger:
              type: string
              description: >-
            Scope:
              type: string
              description: >-
            Level:
              type: string
              description: >-
            OtherActors:
              type: string
              description: >-
            MainSuccessScenario:
              type: string
              description: >-
            Extensions:
              type: string
              description: >-
            isCore:
              type: string
              description: >-
    DAFBase:
      allOf:
        - type: object
          properties:
            alias:
              type: string
              description: >-
            author:
              type: string
              description: >-
            created:
              type: string
              description: >-
            creator:
              type: string
              description: >-
            last_editor:
              type: string
              description: >-
            modified:
              type: string
              description: >-
            Status:
              type: string
              description: >-
            Version:
              type: string
              description: >-
            Name:
              type: string
              description: >-
            id:
              type: string
              description: >-
            notes:
              type: string
              description: >-
    dRole:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            FTEs:
              type: integer
              description: >-
            User:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
            areSkillsDefined:
              type: string
              description: >-
            areSkillsAvailable:
              type: string
              description: >-
            DegreeOfUtilisation:
              type: integer
              description: >-
            Cost:
              type: integer
              description: >-
            dOrganizationUnit:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRole'
            dBusinessService:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRole'
    dAPI:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            swagger:
              type: string
              description: >-
            host:
              type: string
              description: >-
            basePath:
              type: string
              description: >-
            schemes:
              type: string
              description: >-
            consumes:
              type: string
              description: >-
            produces:
              type: string
              description: >-
            definitions:
              type: string
              description: >-
            parameters:
              type: string
              description: >-
            responses:
              type: string
              description: >-
            securityDefinitions:
              type: string
              description: >-
            ID:
              type: string
              description: >-
            tags:
              type: string
              description: >-
            FullName:
              type: integer
              description: >-
            license:
              type: integer
              description: >-
            contact:
              type: string
              description: >-
            dJSON_Schema:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dJSON_Schema'
    dJSON_Schema:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            schema:
              type: string
              description: >-
            schemaFileName:
              type: string
              description: >-
            dModelClass:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dJSON_Schema'
            dJSON_Element:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dJSON_Element'
    dJSON_Element:
      allOf:
        - type: object
    dApplicationComponent:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            BizSatisfaction:
              type: string
              description: >-
            ITSatisfaction:
              type: string
              description: >-
            BizCriticality:
              type: string
              description: >-
            Cost:
              type: string
              description: >-
            InvestmentStrategy:
              type: string
              description: >-
            ApplicationType:
              type: string
              description: >-
            LastStandardReviewDate:
              type: string
              description: >-
            NextStandardReviewDate:
              type: string
              description: >-
            RetireDate:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Port:
              type: integer
              description: >-
            Source:
              type: string
              description: >-
            dApplicationFunction:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dApplicationFunction'
            dStakeholder:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dStakeholder'
            dLogicalAppComponent:
              description: >-
              nullable: false
              type: string
              x-reference: '#/components/schemas/dLogicalAppComponent'
            dPhysicalService:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dPhysicalService'
            dSystem:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dSystem'
    dApplicationFunction:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dStakeholder:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Legitimacy:
              type: string
              description: >-
            Power:
              type: string
              description: >-
            role:
              type: string
              description: >-
            Urgency:
              type: string
              description: >-
            Attitude:
              type: string
              description: >-
            RACI:
              type: integer
              description: >-
            Knowledge:
              type: string
              description: >-
            dOpinionInner:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dOpinionInner'
            dOpinion:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dOpinion'
    dOpinionInner:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dOpinion:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            InnerOpinion:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dOpinion'
    dLogicalAppComponent:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            isUsable:
              type: string
              description: >-
            meetsBizNeeds:
              type: string
              description: >-
            meetsTomorrowNeeds:
              type: string
              description: >-
    dPhysicalService:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            LastStandardReviewDate:
              type: string
              format: date
              description: >-
            NextStandardReviewDate:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            RetireDate:
              type: string
              description: >-
            Source:
              type: string
              description: >-
            port:
              type: integer
              description: >-
            protocol:
              type: string
              description: >-
            execution_mode:
              type: string
              description: >-
            dBusinessService:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dPhysicalService'
            dAPI:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dPhysicalService'
    dSystem:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            config:
              type: string
              description: >-
            plattform:
              type: string
              description: >-
    dBusinessArea:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dCapability:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessArea'
    dBusinessProcess:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            LastStandardReviewDate:
              type: string
              format: date
              description: >-
            NextStandardReviewDate:
              type: string
              format: date
              description: >-
            Owner:
              type: string
              description: >-
            ProcessCriticality:
              type: string
              description: >-
            ProcessType:
              type: string
              description: >-
            ProcessVolumetrics:
              type: string
              description: >-
            RetireDate:
              type: string
              format: date
              description: >-
            Source:
              type: string
              description: >-
            StandardCreationDate:
              type: string
              format: date
              description: >-
            isDocumented:
              type: string
              description: >-
            isEffective:
              type: string
              description: >-
            isOptimized:
              type: string
              description: >-
            isAdopted:
              type: string
              description: >-
            dBusinessService:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessProcess'
            dBusinessProcess:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessProcess'
    dBusinessService:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            LastStandardReviewDate:
              type: string
              format: date
              description: >-
            NextStandardReviewDate:
              type: string
              format: date
              description: >-
            Owner:
              type: string
              description: >-
            RetireDate:
              type: string
              format: date
              description: >-
            Source:
              type: string
              description: >-
    dCapability:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            BusinessValue:
              type: string
              description: >-
            Category:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
            Increments:
              type: string
              description: >-
            IncrementsToBe:
              type: string
              description: >-
            IncrementVertical:
              type: string
              description: >-
            IncrementSupplyChain:
              type: string
              description: >-
            Cost:
              type: string
              description: >-
            Criticality:
              type: string
              description: >-
            Risk:
              type: string
              description: >-
            dLogicalAppComponent:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dLogicalAppComponent'
            dDataEntity:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDataEntity'
            dMeasurementIndicator:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dMeasurementIndicator'
            dGoal:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dGoal'
            dRole:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRole'
            dBusinessProcess:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessProcess'
    dDataEntity:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            PrivacyClassification:
              type: string
              description: >-
            RetentionClassification:
              type: string
              description: >-
            Category:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
            isAccessible:
              type: string
              description: >-
            isTimely:
              type: string
              description: >-
            isAccurate:
              type: string
              description: >-
            dDataEntity:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDataEntity'
    dMeasurementIndicator:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Definition:
              type: string
              description: >-
            UnitOfMeasure:
              type: string
              description: >-
            CurrentLevel:
              type: integer
              description: >-
            SatisfactionLevel:
              type: integer
              description: >-
            LastStandardReviewDate:
              type: string
              format: date
              description: >-
    dGoal:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Value_amount:
              type: string
              description: >-
            Value_Goal:
              type: string
              description: >-
            Priority:
              type: string
              description: >-
            Value_Name:
              type: string
              description: >-
            dAssumption:
              type: string
              description: >-
            dGoal:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dGoal'
            dObjective:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dGoal'
    dCluster:
      allOf:
        - $ref: '#/components/schemas/dCluster'
        - type: object
    dContainer:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dVolume:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dContainer'
    dController:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dView:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dView'
            dModelClass:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dModelClass'
            dController:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dController'
            dBusinessUseCase:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessUseCase'
            dApplicationFunction:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dApplicationFunction'
    dView:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dModelClass:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            _metatype:
              type: string
              description: >-
            child_order:
              type: string
              description: >-
            display_value:
              type: string
              description: >-
            initparams:
              type: string
              description: >-
            is_searchable:
              type: string
              description: >-
            is_soap:
              type: string
              description: >-
            orderby:
              type: string
              description: >-
            parent_order:
              type: string
              description: >-
            pk_name:
              type: string
              description: >-
            table_name:
              type: string
              description: >-
            dTable:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dModelClass'
            dDataEntity:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDataEntity'
    dDecision:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            SubjectArea:
              type: string
              description: >-
            Topic:
              type: string
              description: >-
            Assumptions:
              type: string
              description: >-
            Motivation:
              type: string
              description: >-
            Alternatives:
              type: string
              description: >-
            Decision:
              type: string
              description: >-
            Justification:
              type: string
              description: >-
            Implications:
              type: string
              description: >-
            RelatedDecisions:
              type: string
              description: >-
            dInitiative:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dInitiative'
            dPrinciple:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dPrinciple'
    dInitiative:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            DetailedDescription:
              type: string
              description: >-
            startdate:
              type: integer
              description: >-
            ImpactedCapability:
              type: string
              description: >-
            RelatedProgram:
              type: string
              description: >-
            startDate:
              type: string
              description: >-
            finishDate:
              type: string
              description: >-
            InitiativeDuration:
              type: string
              description: >-
            kind:
              type: string
              description: >-
            purpose:
              type: string
              description: >-
            Rank:
              type: string
              description: >-
            Description:
              type: string
              description: >-
            abilitytoImplement:
              type: string
              description: >-
            Benefit:
              type: string
              description: >-
            dCapability:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dInitiative'
    dPrinciple:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            PrincipleID:
              type: string
              description: >-
            Implications:
              type: string
              description: >-
            PrincipleMeasurement:
              type: string
              description: >-
            Priority:
              type: integer
              description: >-
            Rationale:
              type: string
              description: >-
            Statement:
              type: string
              description: >-
            Type:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
    dDeploymentModel:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dCluster:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDeploymentModel'
    dDeploymentNode:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            IP:
              type: integer
              description: >-
            PublicIP:
              type: integer
              description: >-
            CPU:
              type: integer
              description: >-
            RAM:
              type: integer
              description: >-
            Owner:
              type: integer
              description: >-
            ArchitectureType:
              type: string
              description: >-
            Disk:
              type: integer
              description: >-
            hostname:
              type: string
              description: >-
            OS:
              type: string
              description: >-
    dEvent:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
    dFeature:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Author:
              type: string
              description: >-
            Proofreader:
              type: string
              description: >-
            Status:
              type: string
              description: >-
    dGrowthPackage:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dIssue:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Author:
              type: string
              description: >-
            Responsible:
              type: string
              description: >-
            dRequirement:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRequirement'
            dRisk:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRisk'
    dRequirement:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Author:
              type: string
              description: >-
            Status:
              type: string
              description: >-
            Priority:
              type: string
              description: >-
            Proofreader:
              type: string
              description: >-
            Type:
              type: string
              description: >-
    dRisk:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Likehood:
              type: integer
              description: >-
            Severity:
              type: integer
              description: >-
            RiskStrategy:
              type: string
              description: >-
    dLocation:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            AreaCode:
              type: string
              description: >-
            City:
              type: string
              description: >-
            Country:
              type: string
              description: >-
            EmailID:
              type: string
              description: >-
            PhoneNumber:
              type: string
              description: >-
            Province:
              type: string
              description: >-
            Street:
              type: string
              description: >-
            dDeploymentNode:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDeploymentNode'
    dMeasurementArea:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Definition:
              type: string
              description: >-
            dMeasurementCategory:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dMeasurementCategory'
    dMeasurementCategory:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            MeasurementArea:
              type: string
              description: >-
            Definition:
              type: string
              description: >-
            dMeasurementGrouping:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dMeasurementCategory'
    dMeasurementGrouping:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            MeasurementCategory:
              type: string
              description: >-
            Definition:
              type: string
              description: >-
    dNetwork:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            NetworkType:
              type: string
              description: >-
            NetworkQuality:
              type: integer
              description: >-
            dDeploymentNode:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dDeploymentNode'
            dSecurityGroup:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dSecurityGroup'
    dSecurityGroup:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dObject:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dView:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dView'
            dModelClass:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dModelClass'
            dController:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dController'
    dObjective:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Category:
              type: string
              description: >-
            finishDate:
              type: string
              description: >-
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
    dOrganizationUnit:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            HeadCount:
              type: integer
              description: >-
            dStakeholder:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dStakeholder'
    dProduct:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Owner:
              type: string
              description: >-
            Source:
              type: string
              description: >-
            RetireDate:
              type: string
              description: >-
            Price:
              type: integer
              description: >-
            dBusinessProcess:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dBusinessProcess'
    dProgram:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dRegion:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dResource:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            quantity:
              type: integer
              description: >-
            dCapability:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dResource'
    dSkill:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            SkillLevel:
              type: integer
              description: >-
            SkillCategory:
              type: string
              description: >-
    dSubNetwork:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
    dTable:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Database:
              type: integer
              description: >-
    dTest:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dApplicationComponent:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dTest'
    dValueStream:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            Criticality:
              type: string
              description: >-
            isDecomposed:
              type: string
              description: >-
            entrancecriteria:
              type: string
              description: >-
            exitcriteria:
              type: string
              description: >-
    dVolume:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            name:
              type: string
              description: >-
            MounthPath:
              type: string
              description: >-
            subPath:
              type: string
              description: >-
    dZone:
      allOf:
        - $ref: '#/components/schemas/DAFBase'
        - type: object
          properties:
            dRegion:
              description: >-
              nullable: true
              type: array
              items:
                type: string
                x-reference: '#/components/schemas/dRegion'
    Error:
      description: Error
  parameters:
    id:
      name: id
      required: true
      description: >-
        TODO
      schema:
        type: string
      in: path
  responses:
    200dBusinessProcess_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessProcess'
    200dBusinessProcess_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessProcess'
    200dBusinessProcess_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessProcess'
    200dBusinessProcess_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessProcess'
    200dValueStream_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dValueStream'
    200dAPI_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dAPI'
    200dAPI_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dAPI'
    200dAPI_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dAPI'
    200dAPI_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dAPI'
    200dOpinion_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinion'
    200dOpinion_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinion'
    200dOpinion_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinion'
    200dOpinion_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinion'
    200dCapability_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCapability'
    200dCapability_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCapability'
    200dCapability_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCapability'
    200dCapability_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCapability'
    200dPrinciple_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPrinciple'
    200dBusinessArea_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessArea'
    200dTest_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTest'
    200dJSON_Schema_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dJSON_Schema'
    200dJSON_Schema_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dJSON_Schema'
    200dJSON_Schema_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dJSON_Schema'
    200dJSON_Schema_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dJSON_Schema'
    200dValueStream_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dValueStream'
    200dValueStream_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dValueStream'
    200dValueStream_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dValueStream'
    200dTable_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTable'
    200dTable_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTable'
    200dTable_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTable'
    200dTable_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTable'
    200dApplicationFunction_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationFunction'
    200dOpinionInner_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinionInner'
    200dGoal_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGoal'
    200dGoal_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGoal'
    200dGoal_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGoal'
    200dGoal_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGoal'
    200dObjective_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObjective'
    200dObject_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObject'
    200dObject_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObject'
    200dObject_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObject'
    200dObject_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObject'
    200dZone_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dZone'
    200dModelClass_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dModelClass'
    200dPhysicalService_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPhysicalService'
    200dPhysicalService_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPhysicalService'
    200dPhysicalService_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPhysicalService'
    200dPhysicalService_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPhysicalService'
    200dGrowthPackage_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGrowthPackage'
    200dGrowthPackage_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGrowthPackage'
    200dGrowthPackage_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGrowthPackage'
    200dGrowthPackage_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGrowthPackage'
    200dProgram_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProgram'
    200dSecurityGroup_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSecurityGroup'
    200dSecurityGroup_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSecurityGroup'
    200dSecurityGroup_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSecurityGroup'
    200dSecurityGroup_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSecurityGroup'
    200dInitiative_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dInitiative'
    200dFeature_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dFeature'
    200dFeature_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dFeature'
    200dFeature_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dFeature'
    200dFeature_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dFeature'
    200dView_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dView'
    200dSystem_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSystem'
    200dActor_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dActor'
    200dActor_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dActor'
    200dActor_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dActor'
    200dActor_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dActor'
    200dContainer_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dContainer'
    200dContainer_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dContainer'
    200dContainer_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dContainer'
    200dContainer_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dContainer'
    200dApplicationComponent_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationComponent'
    200dRole_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRole'
    200dController_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dController'
    200dController_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dController'
    200dController_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dController'
    200dController_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dController'
    200dDeploymentModel_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentModel'
    200dDeploymentNode_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentNode'
    200dProduct_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProduct'
    200dProduct_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProduct'
    200dProduct_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProduct'
    200dProduct_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProduct'
    200dApplicationComponent_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationComponent'
    200dApplicationComponent_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationComponent'
    200dApplicationComponent_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationComponent'
    200dRisk_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRisk'
    200dRisk_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRisk'
    200dRisk_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRisk'
    200dRisk_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRisk'
    200dSystem_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSystem'
    200dSystem_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSystem'
    200dSystem_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSystem'
    200dBusinessService_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessService'
    200dRequirement_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRequirement'
    200dEvent_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dEvent'
    200dEvent_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dEvent'
    200dEvent_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dEvent'
    200dEvent_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dEvent'
    200dOrganizationUnit_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOrganizationUnit'
    200dOrganizationUnit_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOrganizationUnit'
    200dOrganizationUnit_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOrganizationUnit'
    200dOrganizationUnit_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOrganizationUnit'
    200dModelClass_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dModelClass'
    200dModelClass_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dModelClass'
    200dModelClass_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dModelClass'
    200dRequirement_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRequirement'
    200dRequirement_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRequirement'
    200dRequirement_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRequirement'
    200dDataEntity_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDataEntity'
    200dBusinessService_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessService'
    200dBusinessService_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessService'
    200dBusinessService_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessService'
    200dDecision_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDecision'
    200dCluster_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCluster'
    200dMeasurementIndicator_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementIndicator'
    200dMeasurementIndicator_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementIndicator'
    200dMeasurementIndicator_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementIndicator'
    200dMeasurementIndicator_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementIndicator'
    200dMeasurementCategory_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementCategory'
    200dMeasurementCategory_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementCategory'
    200dMeasurementCategory_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementCategory'
    200dMeasurementCategory_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementCategory'
    200dView_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dView'
    200dView_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dView'
    200dView_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dView'
    200dDataEntity_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDataEntity'
    200dDataEntity_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDataEntity'
    200dDataEntity_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDataEntity'
    200dLocation_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLocation'
    200dLocation_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLocation'
    200dLocation_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLocation'
    200dLocation_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLocation'
    200dSkill_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSkill'
    200dSkill_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSkill'
    200dSkill_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSkill'
    200dSkill_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSkill'
    200dSubNetwork_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSubNetwork'
    200dSubNetwork_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSubNetwork'
    200dSubNetwork_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSubNetwork'
    200dSubNetwork_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSubNetwork'
    200dRegion_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRegion'
    200dRegion_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRegion'
    200dRegion_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRegion'
    200dRegion_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRegion'
    200dTest_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTest'
    200dTest_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTest'
    200dTest_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTest'
    200dCluster_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCluster'
    200dCluster_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCluster'
    200dCluster_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCluster'
    200dApplicationFunction_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationFunction'
    200dApplicationFunction_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationFunction'
    200dApplicationFunction_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationFunction'
    200dBusinessArea_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessArea'
    200dBusinessArea_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessArea'
    200dBusinessArea_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessArea'
    200dDeploymentNode_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentNode'
    200dDeploymentNode_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentNode'
    200dDeploymentNode_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentNode'
    200dInitiative_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dInitiative'
    200dInitiative_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dInitiative'
    200dInitiative_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dInitiative'
    200dMeasurementGrouping_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementGrouping'
    200dMeasurementGrouping_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementGrouping'
    200dMeasurementGrouping_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementGrouping'
    200dMeasurementGrouping_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementGrouping'
    200dNetwork_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dNetwork'
    200dZone_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dZone'
    200dZone_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dZone'
    200dZone_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dZone'
    200dOpinionInner_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinionInner'
    200dOpinionInner_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinionInner'
    200dOpinionInner_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinionInner'
    200dNetwork_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dNetwork'
    200dNetwork_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dNetwork'
    200dNetwork_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dNetwork'
    200dMeasurementArea_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementArea'
    200dMeasurementArea_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementArea'
    200dMeasurementArea_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementArea'
    200dMeasurementArea_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementArea'
    200dDecision_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDecision'
    200dDecision_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDecision'
    200dDecision_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDecision'
    200dStakeholder_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dStakeholder'
    200dStakeholder_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dStakeholder'
    200dStakeholder_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dStakeholder'
    200dStakeholder_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dStakeholder'
    200dVolume_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dVolume'
    200dVolume_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dVolume'
    200dVolume_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dVolume'
    200dVolume_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dVolume'
    200dLogicalAppComponent_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLogicalAppComponent'
    200dIssue_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dIssue'
    200dIssue_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dIssue'
    200dIssue_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dIssue'
    200dIssue_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dIssue'
    200dProgram_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProgram'
    200dProgram_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProgram'
    200dProgram_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProgram'
    200dBusinessUseCase_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessUseCase'
    200dDeploymentModel_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentModel'
    200dDeploymentModel_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentModel'
    200dDeploymentModel_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentModel'
    200dRole_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRole'
    200dRole_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRole'
    200dRole_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRole'
    200dBusinessUseCase_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessUseCase'
    200dBusinessUseCase_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessUseCase'
    200dBusinessUseCase_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessUseCase'
    200dObjective_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObjective'
    200dObjective_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObjective'
    200dObjective_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObjective'
    200dLogicalAppComponent_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLogicalAppComponent'
    200dLogicalAppComponent_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLogicalAppComponent'
    200dLogicalAppComponent_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLogicalAppComponent'
    200dPrinciple_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPrinciple'
    200dPrinciple_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPrinciple'
    200dPrinciple_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPrinciple'
    200dResource_post:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dResource'
    200dResource_delete:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dResource'
    200dResource_get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dResource'
    200dResource_patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dResource'
    '200':
      description: OK
    '201':
      description: Added Object
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    'Error':
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  requestBodies:
    dBusinessProcess:
      description: >-
        A sequence of activities that produce a specific service or product supporting a particular business capability
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessProcess'
      required: true
    dView:
      description: >-
        A View used in DAF. Controller, Views and Associations define the application flow
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dView'
      required: true
    dApplicationFunction:
      description: >-
        Encapsulates functions supported by applications.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationFunction'
      required: true
    dController:
      description: >-
        Encapsulates application behavior and flow logic.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dController'
      required: true
    dGrowthPackage:
      description: >-
        A set of actions identified to achieve one or more objectives for the business. A work package can be a part of an Initiative, a complete project, or a part of a Program. A Growth pack is a collection of Initiatives architected for consistency and aimed to be executed in the same period.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGrowthPackage'
      required: true
    dInitiative:
      description: >-
        An activity carried out by a Business Unit or organization to achieve a particular goal or improve the Maturity of a certain capability.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dInitiative'
      required: true
    dIssue:
      description: >-
        A concrete problem that is affecting a business. Also, a fact that sets a Requirement to be false. (see also Risk)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dIssue'
      required: true
    dBusinessService:
      description: >-
        <ol>
        	<li>A repeatable activity; a discrete behavior that a building block may be requested or otherwise triggered to perform.</li>
        	<li>A service provided by Business that achieve a business outcome in response to a request.</li>
        </ol>
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessService'
      required: true
    dActor:
      description: >-
        Represents an entity (such as a person, system, or organization) that interacts with the system to achieve a specific goal. An actor typically performs actions within business Use cases and can be internal (e.g., employees) or external (e.g., customers or partner organizations), active and passive.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dActor'
      required: true
    dObject:
      description: >-
        an Object is an instance of a class in a particular moment in runtime that can have its own state and data values.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObject'
      required: true
    dApplicationComponent:
      description: >-
        An application component is a self-contained unit. As such, it is independently deployable, re-usable, and replaceable. An application component performs one or more application functions. It encapsulates its behavior and data, exposes services, and makes them available through interfaces. Cooperating application components are connected via application collaborations.
        
        An application component may be assigned to one or more application functions. An application component has one or more application interfaces, which expose its functionality. Application interfaces of other application components may serve an application component. The name of an application component should preferably be a noun.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dApplicationComponent'
      required: true
    dZone:
      description: >-
        Defines macro divisions containing regions mapped to ArchiMate�s Infrastructure Service.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dZone'
      required: true
    dFeature:
      description: >-
        A Feature is a fact that set his related Requirement to be true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dFeature'
      required: true
    dMeasurementCategory:
      description: >-
        Categorizes measurements within a measurement area.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementCategory'
      required: true
    dPhysicalService:
      description: >-
        a technical implementation of a service that runs on physical or virtual infrastructure, providing specific functionalities, usually in the form of software applications, middleware, databases, or platforms. It is concerned with the deployment, operation, and management of the technology stack, ensuring that the service is available, performant, and reliable. Examples include web servers, APIs, databases, and network services.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPhysicalService'
      required: true
    dNetwork:
      description: >-
        The main communication medium between services and deployments, mapped to ArchiMate Communication Networks, facilitating inter-service communication.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dNetwork'
      required: true
    dSkill:
      description: >-
        an ability that some role possesses with various degree
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSkill'
      required: true
    dBusinessArea:
      description: >-
        an organization of Business interests, can be decomposed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessArea'
      required: true
    dValueStream:
      description: >-
        A representation of  an end-to end collection  of value-adding  Business Processes that create an overall result for a customer, stakeholder or end user. 
        A sequence of activities an enterprise undertakes to deliver on a customer request. More broadly, the sequence of activities required to design, produce, and deliver a good or service to a customer, and it includes the dual flows of information and material.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dValueStream'
      required: true
    dJSON_Schema:
      description: >-
        The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is based on the JSON Schema Specification Draft 4 and uses a predefined subset of it. On top of this subset, there are extensions provided by this specification to allow for more complete documentation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dJSON_Schema'
      required: true
    dDecision:
      description: >-
        Represents decisions and their impact on architecture or processes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDecision'
      required: true
    dLogicalAppComponent:
      description: >-
        Encapsulates logical software components independent of implementation or technology.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLogicalAppComponent'
      required: true
    dGoal:
      description: >-
        A <b>measurable </b>scope that the organization wants to achieve. Can be hierarchically decomposed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dGoal'
      required: true
    dAPI:
      description: >-
        OpenAPI Specification is an open-source format and initiative for designing and creating machine-readable interface files that are utilized in producing, describing, consuming, and visualizing RESTful APIs and web services. 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dAPI'
      required: true
    dTable:
      description: >-
        Represents physical tables in a database schema.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTable'
      required: true
    dDataEntity:
      description: >-
        An encapsulation of data that is recognized by a business domain expert as a thing. Logical data entities can be tied to applications, repositories, and services and may be structured according to implementation considerations.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDataEntity'
      required: true
    dProgram:
      description: >-
        A group of Growth Packages that achieve a complex outcome for the organization
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProgram'
      required: true
    dEvent:
      description: >-
        A behavioral situation that causes a change in the state of an element. (typically a Process)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dEvent'
      required: true
    dMeasurementIndicator:
      description: >-
        The specific measure captured for a Organization or Business Unit which can be measured and quantifiable.  A measurement is a Key Performance indicator 
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementIndicator'
      required: true
    dTest:
      description: >-
        Represents a mechanism for verifying or validating the functionality, behavior, or compliance of am application component . Tests can include automated or manual procedures designed to ensure alignment with requirements, detect defects, and confirm expected outcomes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dTest'
      required: true
    dModelClass:
      description: >-
        Represent a class of the domain model, that can be converted into a Persistent domain class, must inherit from Node. It is the application's dynamic data structure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dModelClass'
      required: true
    dSystem:
      description: >-
        A system configuration. Settings are modeled as attributes with default values, each attribute of the System Config becomes a line in the configuration file.
        e.g. SystemConfig .path = c:/users/app
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSystem'
      required: true
    dMeasurementGrouping:
      description: >-
        a groups of Measurement Indicator that can be aggregated into Categories
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementGrouping'
      required: true
    dOrganizationUnit:
      description: >-
        Defines organizational units responsible for roles, can be decomposed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOrganizationUnit'
      required: true
    dRequirement:
      description: >-
        A Business guide line about the Enterprise or the project. A requirement is formulated in a SMART fashion and uses Moscow verbs (Must Have, Should Have, Could Have, and Would Like to Have.).
        Requirements can be decomposed.
        
        <b>Must Have</b>: These are the requirements that are considered essential for the success of the initiative and must be meet for the system to function. They are often referred to as "hard" or "mandatory" requirements and are typically expressed in Boolean format as "true" or "1".
        
        <b>Should Have</b>: These are the requirements that are considered important, but not essential. They are typically expressed in Boolean format as "maybe" or "0/1" and are often used to prioritize the development of the system.
        
        <b>Could Have</b>: These are the requirements that are considered desirable but not essential. They are typically expressed in Boolean format as "false" or "0". They are used to identify potential enhancements to the system that can be added at a later date.
        
        <b>Would Like to Have</b>: These are the requirements that are considered less important and are often used to identify potential future enhancements to the system.
        
        In addition, the requirement should be SMART, which stands for Specific, Measurable, Achievable, Relevant, and Time-bound. SMART requirements are clear, concise, and easy to understand, and they provide a clear way to measure the success of the project.
        
        
        
        
        
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRequirement'
      required: true
    dOpinionInner:
      description: >-
        Captures implicit stakeholder opinions related to a topic.
        A Stakeholder�s opinion that is relevant for the topic but is not formulated explicitly.
        
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinionInner'
      required: true
    dDeploymentNode:
      description: >-
        Represents a physical machine or virtual server that hosts services, applications, or containers, akin to ArchiMate�s Node concept in the Technology Layer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentNode'
      required: true
    dBusinessUseCase:
      description: >-
        Encapsulates business processes producing value for an enterprise.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dBusinessUseCase'
      required: true
    dProduct:
      description: >-
        Encapsulates outputs produced by business processes.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dProduct'
      required: true
    dDeploymentModel:
      description: >-
        The root class for the description of a Deployments to roll out an application, service, or container to a set of resources. akin to ArchiMate's Technology Layer deployment views.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dDeploymentModel'
      required: true
    dRole:
      description: >-
        The usual or expected function of an actor, or the part somebody or something plays in a particular action or event. An actor may have a number of roles.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRole'
      required: true
    dResource:
      description: >-
        a type of Asset supporting a Business capability
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dResource'
      required: true
    dPrinciple:
      description: >-
        Defines qualitative statements guiding architecture intent.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dPrinciple'
      required: true
    dStakeholder:
      description: >-
        Represents any party or force influencing the domain of interest. Any person or force that have an interest in the considered domain. This is typically indicated by name, can be connected with a Role in the organization. A stakeholder has open and Inner opinions that are relevant for the subject matter.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dStakeholder'
      required: true
    dLocation:
      description: >-
        A place where business activity takes place and can be hierarchically decomposed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dLocation'
      required: true
    dContainer:
      description: >-
        Encapsulates application components and services, mirroring ArchiMate's concept of a Node, where an application runs.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dContainer'
      required: true
    dCluster:
      description: >-
        Represents a set of nodes working in the same Region, akin to ArchiMate�s Node concept within a server infrastructure.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCluster'
      required: true
    dVolume:
      description: >-
        Refers to the storage assigned to containers, ensuring persistence, aligning with the Data Object in ArchiMate�s Application Layer.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dVolume'
      required: true
    dRegion:
      description: >-
        A geographic area containing clusters and zones, aligned with ArchiMate's Location concept for representing deployment geography.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRegion'
      required: true
    dOpinion:
      description: >-
        A view or judgment formed about a Topic. That is formulated in an explicit fashion. Captures explicit stakeholder judgments on a topic.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dOpinion'
      required: true
    dSubNetwork:
      description: >-
        A subset of a network, used to organize and isolate portions of the network. Equivalent to an ArchiMate Node, responsible for networking resources.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSubNetwork'
      required: true
    dObjective:
      description: >-
        A time-bounded <b>milestone </b>for an organization used to demonstrate progress towards a goal. The Objective is a non material achievement, other than a Goal, the objective has no specific value to be measured
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dObjective'
      required: true
    dCapability:
      description: >-
        Represents an organizational capability to achieve business outcomes.Can be current available in an Organization Unit (or) A business-focused outcome that is delivered by the completion of one or more work packages (by increasing the capability Maturity).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dCapability'
      required: true
    dSecurityGroup:
      description: >-
        Controls and manages access and permissions between services, in line with TOGAF's Security Architecture for protecting digital assets.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dSecurityGroup'
      required: true
    dMeasurementArea:
      description: >-
        Represents areas of organizational or business performance measurement. The organization or Business units performance objective is captured as measurement area. 
        
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dMeasurementArea'
      required: true
    dRisk:
      description: >-
        Identifies and assesses potential issue impacting other elements. A risk is a potential future Issue.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/dRisk'
      required: true
x-uml-relationships:
  
  - name: "dBusinessUseCase"
    x-ea-guid: AED175BE-14A5-47bb-A399-1249CF002103
    source:
      schema: "#/components/schemas/dActor"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessUseCase"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dRole"
    x-ea-guid: 6AA3CEE9-C875-4064-8D9A-27AF3ED618DB
    source:
      schema: "#/components/schemas/dActor"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRole"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dOrganizationUnit"
    x-ea-guid: A305A931-1C51-40cb-B9FD-9F56CF2287C7
    source:
      schema: "#/components/schemas/dOrganizationUnit"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRole"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessService"
    x-ea-guid: DBF2EAEF-7CBA-4d0f-B00C-D9E861CCA74A
    source:
      schema: "#/components/schemas/dBusinessService"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRole"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dJSON_Schema"
    x-ea-guid: 67ED6013-29E0-4487-830B-ED5B03163B48
    source:
      schema: "#/components/schemas/dAPI"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dJSON_Schema"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dModelClass"
    x-ea-guid: FBF2AC62-BDCD-43e4-9AD1-5C219478CAB2
    source:
      schema: "#/components/schemas/dModelClass"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dJSON_Schema"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dJSON_Element"
    x-ea-guid: 33430B88-86DD-45c3-BAD2-BE04A6BAFA48
    source:
      schema: "#/components/schemas/dJSON_Schema"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dJSON_Element"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dApplicationFunction"
    x-ea-guid: CD8AA28A-3122-4817-935D-3A82ECE73FF2
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dApplicationFunction"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dStakeholder"
    x-ea-guid: B476817A-A9E4-479d-B3CD-8BA44D3921CF
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dStakeholder"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dLogicalAppComponent"
    x-ea-guid: 5430DD27-EF1A-40ca-ABD5-575E337BE6F4
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "0..-1"
      navigability: Non-Navigable
    target:
      schema: "#/components/schemas/dLogicalAppComponent"
      multiplicity: "0..1"
      navigability: Navigable
  - name: "dPhysicalService"
    x-ea-guid: D0ADAD7E-4F41-4ba5-B7AC-A16A76F34063
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dPhysicalService"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dSystem"
    x-ea-guid: A2D396AA-51F6-475e-8F4B-E6BA860368EF
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dSystem"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dOpinionInner"
    x-ea-guid: 8CF8BF85-4F9B-4710-90D2-CE438B0F1296
    source:
      schema: "#/components/schemas/dStakeholder"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dOpinionInner"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dOpinion"
    x-ea-guid: 4C8D8F9D-3302-49f6-9631-F44877211BF7
    source:
      schema: "#/components/schemas/dStakeholder"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dOpinion"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "InnerOpinion"
    x-ea-guid: 453AEB37-1C23-4de2-876F-AB7F178F7981
    source:
      schema: "#/components/schemas/dOpinion"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dOpinion"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessService"
    x-ea-guid: 5A1F3E9E-0FEC-4dcc-9ED3-1820920422DC
    source:
      schema: "#/components/schemas/dBusinessService"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dPhysicalService"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dAPI"
    x-ea-guid: E7C08AC7-C15A-47a3-8095-47E8270DEE43
    source:
      schema: "#/components/schemas/dAPI"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dPhysicalService"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dCapability"
    x-ea-guid: 2E9FFA86-1EAB-4ffc-B0A1-B2AEFBF53F27
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessArea"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessService"
    x-ea-guid: ECC0E126-548D-4d11-B8AA-60081A228CA6
    source:
      schema: "#/components/schemas/dBusinessService"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessProcess"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessProcess"
    x-ea-guid: 96531DF0-4446-4c9c-8ED5-1932677D3213
    source:
      schema: "#/components/schemas/dBusinessProcess"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessProcess"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dLogicalAppComponent"
    x-ea-guid: 99C7B332-0658-46c7-B218-23478A47ED6D
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dLogicalAppComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dDataEntity"
    x-ea-guid: BAE473E6-DFA7-4976-B88C-76989B1856D3
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDataEntity"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dMeasurementIndicator"
    x-ea-guid: 953B4350-EC42-481d-9044-70AC8F8B5E55
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dMeasurementIndicator"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dGoal"
    x-ea-guid: FC6F4BA5-6B75-4155-96C0-FDA1C5423175
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dGoal"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dRole"
    x-ea-guid: 4923ED1A-7D4B-4170-8E02-53EF7B2952CC
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRole"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessProcess"
    x-ea-guid: 17B49059-57B7-4cae-873C-4DFCE8A1C2EA
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessProcess"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dDataEntity"
    x-ea-guid: D00DA3B9-47B1-41c9-B1D8-EE7DB6256E68
    source:
      schema: "#/components/schemas/dDataEntity"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDataEntity"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dGoal"
    x-ea-guid: 4E3F11D0-4035-4292-9DB4-6C97F7075BB5
    source:
      schema: "#/components/schemas/dGoal"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dGoal"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dObjective"
    x-ea-guid: 1023001C-FFA3-453e-A6B7-4B19D3ECA43A
    source:
      schema: "#/components/schemas/dObjective"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dGoal"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dVolume"
    x-ea-guid: 23E1D252-F1B3-4411-A4F2-8D48E800EB15
    source:
      schema: "#/components/schemas/dVolume"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dContainer"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dView"
    x-ea-guid: 2897717F-06A0-4d1a-8AE6-C941BCD3599A
    source:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dView"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dModelClass"
    x-ea-guid: 5D86BDA2-FBC5-4400-B82D-AE0184EA8AB8
    source:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dModelClass"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dController"
    x-ea-guid: 88065970-1EEC-49de-918C-213E115A9B98
    source:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessUseCase"
    x-ea-guid: 799F7881-1086-4de4-A7F5-60CFEA5E5E2B
    source:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessUseCase"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dApplicationFunction"
    x-ea-guid: B40F20F1-57D8-47bf-B573-A7EA5412E3C4
    source:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dApplicationFunction"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dTable"
    x-ea-guid: C248E937-20CA-48de-8949-FD36E236AA85
    source:
      schema: "#/components/schemas/dTable"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dModelClass"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dDataEntity"
    x-ea-guid: F9ECF7E0-9366-4afe-918B-94DAF6C24E12
    source:
      schema: "#/components/schemas/dModelClass"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDataEntity"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dInitiative"
    x-ea-guid: 6BFEE8C2-751E-4bf9-8056-49DEEA125113
    source:
      schema: "#/components/schemas/dDecision"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dInitiative"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dPrinciple"
    x-ea-guid: 8839D2AB-D0D6-4eb5-8BD0-A5B779BDC383
    source:
      schema: "#/components/schemas/dDecision"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dPrinciple"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dCapability"
    x-ea-guid: BD67BE58-87A4-4a3b-AC77-9B8F4D5CDA33
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dInitiative"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dCluster"
    x-ea-guid: 3193E180-C1B6-443e-A7A9-9424416299C9
    source:
      schema: "#/components/schemas/dCluster"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDeploymentModel"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dRequirement"
    x-ea-guid: EC89304D-B4B4-47f3-A558-F6B0D447F250
    source:
      schema: "#/components/schemas/dIssue"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRequirement"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dRisk"
    x-ea-guid: C31D9587-18E2-4c42-9318-19B28C2C2202
    source:
      schema: "#/components/schemas/dIssue"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRisk"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dDeploymentNode"
    x-ea-guid: B5B7D96E-2126-493e-BA43-FD0B1168CCFA
    source:
      schema: "#/components/schemas/dLocation"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDeploymentNode"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dMeasurementCategory"
    x-ea-guid: 60620E57-44C2-4eff-9014-8475FAD314BA
    source:
      schema: "#/components/schemas/dMeasurementArea"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dMeasurementCategory"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dMeasurementGrouping"
    x-ea-guid: 938700FB-F95C-40f1-837E-A85F1951269E
    source:
      schema: "#/components/schemas/dMeasurementGrouping"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dMeasurementCategory"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dDeploymentNode"
    x-ea-guid: 2C8BD6F3-353E-4407-AC0F-8376D95C75BA
    source:
      schema: "#/components/schemas/dNetwork"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dDeploymentNode"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dSecurityGroup"
    x-ea-guid: 52BCD257-32D4-485a-BD2E-390534BE9469
    source:
      schema: "#/components/schemas/dNetwork"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dSecurityGroup"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dView"
    x-ea-guid: AD1E51CE-362D-4b10-A00B-880F970DB289
    source:
      schema: "#/components/schemas/dObject"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dView"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dModelClass"
    x-ea-guid: FF1FCD0D-8F2B-44b9-B27E-C35227DBBD13
    source:
      schema: "#/components/schemas/dObject"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dModelClass"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dController"
    x-ea-guid: B06D1A79-1001-4437-819C-F3AEBF5D44C6
    source:
      schema: "#/components/schemas/dObject"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dController"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dStakeholder"
    x-ea-guid: 0860B424-DFD2-420c-8C22-4FF123170C5D
    source:
      schema: "#/components/schemas/dOrganizationUnit"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dStakeholder"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dBusinessProcess"
    x-ea-guid: 11791ECD-5386-4c0d-835B-A9E36EF24915
    source:
      schema: "#/components/schemas/dProduct"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dBusinessProcess"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dCapability"
    x-ea-guid: BAAC1ED7-3143-49b6-84C2-B2BB5FDB12E1
    source:
      schema: "#/components/schemas/dCapability"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dResource"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dApplicationComponent"
    x-ea-guid: D077D8C4-6AA3-4b1a-BEA1-26408340180E
    source:
      schema: "#/components/schemas/dApplicationComponent"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dTest"
      multiplicity: "-1..-1"
      navigability: Unspecified
  - name: "dRegion"
    x-ea-guid: 1434F1E8-B248-4793-844E-7AA0DA1BD444
    source:
      schema: "#/components/schemas/dZone"
      multiplicity: "-1..-1"
      navigability: Unspecified
    target:
      schema: "#/components/schemas/dRegion"
      multiplicity: "-1..-1"
      navigability: Unspecified

